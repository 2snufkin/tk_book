"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[754],{5366:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Tumorotek/General/Code Formatting","title":"Code Formatting Standards in Tumorotek","description":"In the Tumorotek project, consistent code formatting across all developers is considered essential for maintaining code quality and team efficiency. To enforce this consistency, the team has implemented several measures:","source":"@site/docs/Tumorotek/General/Code Formatting.md","sourceDirName":"Tumorotek/General","slug":"/Tumorotek/General/Code Formatting","permalink":"/tk_book/Tumorotek/General/Code Formatting","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SQL Injection Overview","permalink":"/tk_book/Security/Sql Injection"},"next":{"title":"Development Environment Setup Guide","permalink":"/tk_book/Tumorotek/General/Development Environment Setup"}}');var r=t(4848),o=t(8453);const s={},l="Code Formatting Standards in Tumorotek",a={},c=[{value:"Mandatory Formatter Configuration",id:"mandatory-formatter-configuration",level:3},{value:"IDE Integration",id:"ide-integration",level:3},{value:"Team Culture",id:"team-culture",level:3},{value:"Purpose",id:"purpose",level:2},{value:"Key Features",id:"key-features",level:2},{value:"How to Use",id:"how-to-use",level:2},{value:"In Eclipse",id:"in-eclipse",level:3},{value:"In IntelliJ IDEA",id:"in-intellij-idea",level:3},{value:"Note",id:"note",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"code-formatting-standards-in-tumorotek",children:"Code Formatting Standards in Tumorotek"})}),"\n",(0,r.jsx)(n.p,{children:"In the Tumorotek project, consistent code formatting across all developers is considered essential for maintaining code quality and team efficiency. To enforce this consistency, the team has implemented several measures:"}),"\n",(0,r.jsx)(n.h3,{id:"mandatory-formatter-configuration",children:"Mandatory Formatter Configuration"}),"\n",(0,r.jsx)(n.p,{children:"All developers must use the standardized APHP_Java_Formatter configuration file that defines the project's formatting rules. This file is found here under the Files section. It should be imported into each developer's IDE. It contains a set of rules that determine how Java code should be formatted, including aspects like indentation, line breaks, spacing, and brace placement."}),"\n",(0,r.jsx)(n.h3,{id:"ide-integration",children:"IDE Integration"}),"\n",(0,r.jsx)(n.p,{children:"Development environments are configured to automatically apply formatting:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Eclipse and IntelliJ IDEA are set up to use the same formatter configuration"}),"\n",(0,r.jsx)(n.li,{children:"Auto-formatting on save is enabled by default"}),"\n",(0,r.jsx)(n.li,{children:"Project-specific formatter settings override any personal preferences"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"team-culture",children:"Team Culture"}),"\n",(0,r.jsx)(n.p,{children:"The development team has fostered a culture where consistent formatting is valued:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"New team members are immediately onboarded with the formatting requirements"}),"\n",(0,r.jsx)(n.li,{children:"Code reviews include formatting checks as a standard step"}),"\n",(0,r.jsx)(n.li,{children:"Documentation clearly explains the importance of following these standards"}),"\n",(0,r.jsx)(n.li,{children:"Regular team discussions reinforce the benefits of consistent formatting"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This systematic approach has resulted in a codebase with highly consistent formatting, making it easier to maintain and evolve the application over time."}),"\n",(0,r.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Maintains consistent code formatting across the entire project"}),"\n",(0,r.jsx)(n.li,{children:"Makes code reviews easier by eliminating style-related discussions"}),"\n",(0,r.jsx)(n.li,{children:"Improves code readability by enforcing standardized formatting"}),"\n",(0,r.jsx)(n.li,{children:"Helps new developers quickly adapt to the project's coding style"}),"\n",(0,r.jsx)(n.li,{children:"Reduces merge conflicts caused by formatting differences"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Uses spaces for indentation (3 spaces)"}),"\n",(0,r.jsx)(n.li,{children:"Maximum line length of 130 characters"}),"\n",(0,r.jsx)(n.li,{children:"Specific rules for brace placement"}),"\n",(0,r.jsx)(n.li,{children:"Standardized spacing around operators and keywords"}),"\n",(0,r.jsx)(n.li,{children:"Consistent formatting for annotations and comments"}),"\n",(0,r.jsx)(n.li,{children:"Java 1.7 compliance settings"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"how-to-use",children:"How to Use"}),"\n",(0,r.jsx)(n.h3,{id:"in-eclipse",children:"In Eclipse"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Go to ",(0,r.jsx)(n.code,{children:"Window > Preferences > Java > Code Style > Formatter"})]}),"\n",(0,r.jsx)(n.li,{children:'Click on "Import" button'}),"\n",(0,r.jsxs)(n.li,{children:["Select the ",(0,r.jsx)(n.code,{children:"APHP_Java_Formatter.xml"})," file"]}),"\n",(0,r.jsx)(n.li,{children:'Click "Apply and Close"'}),"\n",(0,r.jsxs)(n.li,{children:["To format code:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"Ctrl + Shift + F"})," for the current file"]}),"\n",(0,r.jsx)(n.li,{children:"Or right-click in editor > Source > Format"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"in-intellij-idea",children:"In IntelliJ IDEA"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:['Install the "Eclipse Code Formatter" plugin:',"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Go to ",(0,r.jsx)(n.code,{children:"Settings > Plugins"})]}),"\n",(0,r.jsx)(n.li,{children:'Search for "Eclipse Code Formatter"'}),"\n",(0,r.jsx)(n.li,{children:"Install and restart IntelliJ"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Configure the formatter:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Go to ",(0,r.jsx)(n.code,{children:"Settings > Other Settings > Eclipse Code Formatter"})]}),"\n",(0,r.jsx)(n.li,{children:'Check "Use the Eclipse code formatter"'}),"\n",(0,r.jsxs)(n.li,{children:["Select the ",(0,r.jsx)(n.code,{children:"APHP_Java_Formatter.xml"}),' file in "Eclipse Java Formatter config file"']}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["To format code:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"Ctrl + Alt + L"})," for the current file"]}),"\n",(0,r.jsx)(n.li,{children:"Or right-click in editor > Reformat Code"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"note",children:"Note"}),"\n",(0,r.jsx)(n.p,{children:"Make sure all team members use the same formatter configuration to maintain consistency throughout the project."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);