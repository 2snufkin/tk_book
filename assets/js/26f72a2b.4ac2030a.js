"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[3373],{5497:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var s=i(4848),l=i(8453);const o={},t=void 0,r={id:"Tumorotek/General/Naming Conventions",title:"Naming Conventions",description:"Naming Conventions",source:"@site/docs/Tumorotek/General/Naming Conventions.md",sourceDirName:"Tumorotek/General",slug:"/Tumorotek/General/Naming Conventions",permalink:"/tk_book/Tumorotek/General/Naming Conventions",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GenericDaoJpa",permalink:"/tk_book/Tumorotek/General/GenericDaoJpa"},next:{title:"PDF Generation Guide for Tumorotek",permalink:"/tk_book/Tumorotek/How To/PDF Generation"}},c={},a=[{value:"Naming Conventions",id:"naming-conventions",level:2},{value:"Naming Conventions",id:"naming-conventions-1",level:3},{value:"Language Usage in Names",id:"language-usage-in-names",level:4},{value:"Examples of Inconsistent Naming (To Avoid)",id:"examples-of-inconsistent-naming-to-avoid",level:5},{value:"Note on Language Mixing",id:"note-on-language-mixing",level:5},{value:"Formatting Guidelines",id:"formatting-guidelines",level:4}];function d(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,s.jsx)(n.h3,{id:"naming-conventions-1",children:"Naming Conventions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Classes"}),": PascalCase (e.g., ",(0,s.jsx)(n.code,{children:"PatientRecord"}),", ",(0,s.jsx)(n.code,{children:"TumorSample"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Variables"}),": camelCase (e.g., ",(0,s.jsx)(n.code,{children:"patientName"}),", ",(0,s.jsx)(n.code,{children:"sampleId"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Constants"}),": UPPER_SNAKE_CASE (e.g., ",(0,s.jsx)(n.code,{children:"MAX_SAMPLE_SIZE"}),", ",(0,s.jsx)(n.code,{children:"DEFAULT_TIMEOUT"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Methods"}),": camelCase, should be verbs (e.g., ",(0,s.jsx)(n.code,{children:"getSample()"}),", ",(0,s.jsx)(n.code,{children:"processData()"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Packages"}),": all lowercase, separated by dots (e.g., ",(0,s.jsx)(n.code,{children:"fr.tumorotek.core"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"language-usage-in-names",children:"Language Usage in Names"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Business Logic"}),": Use French terms for domain-specific concepts"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Correct: ",(0,s.jsx)(n.code,{children:"findByEchantillon()"}),", ",(0,s.jsx)(n.code,{children:"getPrelevement()"}),", ",(0,s.jsx)(n.code,{children:"validateDeriveStatus()"})]}),"\n",(0,s.jsxs)(n.li,{children:["Incorrect: ",(0,s.jsx)(n.code,{children:"findBySample()"}),", ",(0,s.jsx)(n.code,{children:"getCollection()"}),", ",(0,s.jsx)(n.code,{children:"validateDerivativeStatus()"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Technical/Infrastructure Code"}),": Use English terms"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Correct: ",(0,s.jsx)(n.code,{children:"saveToDatabase()"}),", ",(0,s.jsx)(n.code,{children:"validateInput()"}),", ",(0,s.jsx)(n.code,{children:"handleException()"})]}),"\n",(0,s.jsxs)(n.li,{children:["Incorrect: ",(0,s.jsx)(n.code,{children:"sauvegarderEnBase()"}),", ",(0,s.jsx)(n.code,{children:"validerEntree()"}),", ",(0,s.jsx)(n.code,{children:"gererException()"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"examples-of-inconsistent-naming-to-avoid",children:"Examples of Inconsistent Naming (To Avoid)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sauvegarderPatient()"})," - Technical operation should use English"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"validateDonnees()"})," - Technical validation should use English"]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"note-on-language-mixing",children:"Note on Language Mixing"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getEchantillonById()"})," - Inconsistent mix of English/French"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"While mixing English and French in code is generally not recommended as it:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Creates cognitive overhead when switching between languages"}),"\n",(0,s.jsx)(n.li,{children:"Makes the code less accessible to non-French speakers"}),"\n",(0,s.jsx)(n.li,{children:"Can lead to inconsistent naming patterns"}),"\n",(0,s.jsx)(n.li,{children:"Complicates documentation and knowledge sharing"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The existing codebase extensively uses this mixed approach. Switching entirely to English would:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Make the code harder to understand for developers familiar with the current patterns"}),"\n",(0,s.jsx)(n.li,{children:"Create inconsistency with existing modules and APIs"}),"\n",(0,s.jsx)(n.li,{children:"Risk introducing errors during translation of domain concepts"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Therefore, the pragmatic approach is to:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Minimize language mixing where possible"}),"\n",(0,s.jsx)(n.li,{children:"Use French terms only for core business domain concepts that match existing patterns"}),"\n",(0,s.jsx)(n.li,{children:"Keep all technical/infrastructure code in English"}),"\n",(0,s.jsx)(n.li,{children:"Document any new French terms clearly in code comments and documentation"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This balanced approach maintains consistency with existing code while limiting further language mixing."}),"\n",(0,s.jsx)(n.h4,{id:"formatting-guidelines",children:"Formatting Guidelines"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Indent using 4 spaces (not tabs)"}),"\n",(0,s.jsx)(n.li,{children:"Maximum line length: 120 characters"}),"\n",(0,s.jsx)(n.li,{children:"One statement per line"}),"\n",(0,s.jsx)(n.li,{children:"Use blank lines to separate logical blocks"}),"\n",(0,s.jsx)(n.li,{children:"Place opening braces on the same line as control statements"}),"\n",(0,s.jsx)(n.li,{children:"Always use braces for control statements, even for single-line blocks"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>r});var s=i(6540);const l={},o=s.createContext(l);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);