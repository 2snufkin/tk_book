"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[437],{7196:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>d,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"Tumorotek/Packages/webapp/ProdDeriveRowRenderer","title":"ProdDeriveRowRenderer","description":"Constructor","source":"@site/docs/Tumorotek/Packages/webapp/ProdDeriveRowRenderer.md","sourceDirName":"Tumorotek/Packages/webapp","slug":"/Tumorotek/Packages/webapp/ProdDeriveRowRenderer","permalink":"/tk_book/Tumorotek/Packages/webapp/ProdDeriveRowRenderer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ListeStockages","permalink":"/tk_book/Tumorotek/Packages/webapp/ListeStockages"},"next":{"title":"Controller Annotations","permalink":"/tk_book/ZK/Annotations"}}');var i=s(4848),t=s(8453);const d={},c="ProdDeriveRowRenderer",o={},a=[{value:"Constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2}];function h(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"prodderiverowrenderer",children:"ProdDeriveRowRenderer"})}),"\n",(0,i.jsx)(r.h2,{id:"constructor",children:"Constructor"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"ProdDeriveRowRenderer(boolean select, boolean cols)"})}),": Constructs a ",(0,i.jsx)(r.code,{children:"ProdDeriveRowRenderer"})," instance. Takes two parameters: ",(0,i.jsx)(r.code,{children:"select"})," which specifies if selection mode is enabled, and ",(0,i.jsx)(r.code,{children:"cols"})," which specifies if all collections are visible."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"render(Row row, ProdDerive data, int index)"})}),": Renders the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object's details in a ",(0,i.jsx)(r.code,{children:"Row"}),". Takes three parameters: ",(0,i.jsx)(r.code,{children:"row"})," which is the row to render, ",(0,i.jsx)(r.code,{children:"data"})," which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object, and ",(0,i.jsx)(r.code,{children:"index"})," which is the index of the row."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"getTypeParent(ProdDerive prodDerive)"})}),": Retrieves the type of the parent (Prelevement, Echantillon, or ProdDerive). Takes a ",(0,i.jsx)(r.code,{children:"prodDerive"})," parameter which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object. Returns the type of the parent."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"getCodeParent(ProdDerive prodDerive)"})}),": Retrieves the code of the parent (Prelevement, Echantillon, or ProdDerive). Takes a ",(0,i.jsx)(r.code,{children:"prodDerive"})," parameter which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object. Returns the code of the parent as a ",(0,i.jsx)(r.code,{children:"Label"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"getQuantite(ProdDerive prodDerive)"})}),": Concatenates the quantity and its unit. Takes a ",(0,i.jsx)(r.code,{children:"prodDerive"})," parameter which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object. Returns the concatenated quantity and unit as a string."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"getVolume(ProdDerive prodDerive)"})}),": Concatenates the volume and its unit. Takes a ",(0,i.jsx)(r.code,{children:"prodDerive"})," parameter which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object. Returns the concatenated volume and unit as a string."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"getConcentration(ProdDerive prodDerive)"})}),": Concatenates the concentration and its unit. Takes a ",(0,i.jsx)(r.code,{children:"prodDerive"})," parameter which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object. Returns the concatenated concentration and unit as a string."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"getEmplacementAdrl(ProdDerive prodDerive)"})}),": Retrieves the address of the storage location. Takes a ",(0,i.jsx)(r.code,{children:"prodDerive"})," parameter which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object. Returns the address of the storage location as a string."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"getNbDerives(ProdDerive prodDerive)"})}),": Retrieves the number of derived products. Takes a ",(0,i.jsx)(r.code,{children:"prodDerive"})," parameter which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object. Returns the number of derived products."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"getNbCessions(ProdDerive prodDerive)"})}),": Retrieves the number of transfers. Takes a ",(0,i.jsx)(r.code,{children:"prodDerive"})," parameter which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object. Returns the number of transfers."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"getDateCreation(ProdDerive prodDerive)"})}),": Retrieves the system creation date of the derivative product. Takes a ",(0,i.jsx)(r.code,{children:"prodDerive"})," parameter which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object. Returns the creation date as a string."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"floor(float a, int n)"})}),": Rounds a float to a specified number of decimal places. Takes two parameters: ",(0,i.jsx)(r.code,{children:"a"})," which is the float value to be rounded, and ",(0,i.jsx)(r.code,{children:"n"})," which is the number of decimal places. Returns the rounded float value."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"getPatient(ProdDerive derive)"})}),": Retrieves the patient's name and surname associated with the derivative. Takes a ",(0,i.jsx)(r.code,{children:"derive"})," parameter which is the ",(0,i.jsx)(r.code,{children:"ProdDerive"})," object. Returns the patient's name and surname as a string."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"isAccessible()"})}),": Checks if the renderer is accessible. Returns ",(0,i.jsx)(r.code,{children:"true"})," if accessible, otherwise ",(0,i.jsx)(r.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"setAccessible(boolean acc)"})}),": Sets the accessibility of the renderer. Takes an ",(0,i.jsx)(r.code,{children:"acc"})," parameter which is the accessibility value."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"setAccessEchantillon(boolean ae)"})}),": Sets the accessibility of Echantillon. Takes an ",(0,i.jsx)(r.code,{children:"ae"})," parameter which is the accessibility value."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"setAccessPrelevement(boolean ap)"})}),": Sets the accessibility of Prelevement. Takes an ",(0,i.jsx)(r.code,{children:"ap"})," parameter which is the accessibility value."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"isEmbedded()"})}),": Checks if the renderer is embedded. Returns ",(0,i.jsx)(r.code,{children:"true"})," if embedded, otherwise ",(0,i.jsx)(r.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"setEmbedded(boolean isE)"})}),": Sets the embedded status of the renderer. Takes an ",(0,i.jsx)(r.code,{children:"isE"})," parameter which is the embedded status value."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"setAccessStockage(boolean ac)"})}),": Sets the accessibility of the storage location. Takes an ",(0,i.jsx)(r.code,{children:"ac"})," parameter which is the accessibility value."]}),"\n"]}),"\n"]})]})}function l(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>d,x:()=>c});var n=s(6540);const i={},t=n.createContext(i);function d(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);