"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[8817],{4626:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"Libraries/Liquibase","title":"Liquibase Developer Reference Guide","description":"Introduction","source":"@site/docs/Libraries/Liquibase.md","sourceDirName":"Libraries","slug":"/Libraries/Liquibase","permalink":"/tk_book/Libraries/Liquibase","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Liquibase In TK","permalink":"/tk_book/Libraries/Liquibase In TK"},"next":{"title":"Dependency Management in Java Projects","permalink":"/tk_book/Security/Dependencies"}}');var i=s(4848),a=s(8453);const l={},t="Liquibase Developer Reference Guide",c={},o=[{value:"Introduction",id:"introduction",level:2},{value:"Core Concepts",id:"core-concepts",level:2},{value:"How Liquibase Works",id:"how-liquibase-works",level:3},{value:"Key Components",id:"key-components",level:3},{value:"1. Changelog Files",id:"1-changelog-files",level:4},{value:"2. Changesets",id:"2-changesets",level:4},{value:"3. Tracking Tables",id:"3-tracking-tables",level:4},{value:"Configuration",id:"configuration",level:2},{value:"Properties File Setup",id:"properties-file-setup",level:3},{value:"Common Properties",id:"common-properties",level:3},{value:"Command-line vs. Properties File",id:"command-line-vs-properties-file",level:3},{value:"Practical Usage",id:"practical-usage",level:2},{value:"Common Commands",id:"common-commands",level:3},{value:"Integration with Build Tools",id:"integration-with-build-tools",level:3},{value:"Maven Integration",id:"maven-integration",level:4},{value:"Spring Boot Integration",id:"spring-boot-integration",level:4},{value:"Change Types and Examples",id:"change-types-and-examples",level:2},{value:"Table Operations",id:"table-operations",level:3},{value:"Data Operations",id:"data-operations",level:3},{value:"Using SQL Directly",id:"using-sql-directly",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Preconditions",id:"preconditions",level:3},{value:"Contexts",id:"contexts",level:3},{value:"Rollback Support",id:"rollback-support",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:3},{value:"Checksum Mismatch",id:"checksum-mismatch",level:4},{value:"Database Lock Issues",id:"database-lock-issues",level:4},{value:"Path Resolution Problems",id:"path-resolution-problems",level:4},{value:"Best Practices",id:"best-practices",level:2},{value:"Example Project Structure",id:"example-project-structure",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"liquibase-developer-reference-guide",children:"Liquibase Developer Reference Guide"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"Liquibase is an open-source database schema change management solution that enables you to track, version, and deploy database changes reliably across different environments. This guide explains core concepts, configuration, and practical usage to help developers new to Liquibase integrate it into their workflow."}),"\n",(0,i.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,i.jsx)(n.h3,{id:"how-liquibase-works",children:"How Liquibase Works"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Change Tracking"}),": Liquibase uses XML, YAML, JSON, or SQL files to define database schema changes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Execution Flow"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Liquibase connects to your database"}),"\n",(0,i.jsxs)(n.li,{children:["It acquires a lock (using ",(0,i.jsx)(n.code,{children:"DATABASECHANGELOGLOCK"})," table)"]}),"\n",(0,i.jsxs)(n.li,{children:["It checks which changes have been applied (using ",(0,i.jsx)(n.code,{children:"DATABASECHANGELOG"})," table)"]}),"\n",(0,i.jsx)(n.li,{children:"It runs any pending changes in order"}),"\n",(0,i.jsx)(n.li,{children:"It records the execution in the tracking table"}),"\n",(0,i.jsx)(n.li,{children:"It releases the lock"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"key-components",children:"Key Components"}),"\n",(0,i.jsx)(n.h4,{id:"1-changelog-files",children:"1. Changelog Files"}),"\n",(0,i.jsxs)(n.p,{children:["Changelog files are the heart of Liquibase. They contain a sequence of ",(0,i.jsx)(n.strong,{children:"changesets"})," that define database modifications:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"\r\n                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog\r\n                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.10.xsd">\r\n\r\n    <changeSet id="create-users-table" author="developer">\r\n        <createTable tableName="USERS">\r\n            <column name="id" type="INT">\r\n                <constraints primaryKey="true" nullable="false"/>\r\n            </column>\r\n            <column name="username" type="VARCHAR(50)">\r\n                <constraints unique="true" nullable="false"/>\r\n            </column>\r\n            <column name="created_date" type="DATETIME" defaultValueComputed="CURRENT_TIMESTAMP"/>\r\n        </createTable>\r\n    </changeSet>\r\n</databaseChangeLog>\n'})}),"\n",(0,i.jsx)(n.h4,{id:"2-changesets",children:"2. Changesets"}),"\n",(0,i.jsx)(n.p,{children:"A changeset is an atomic unit of change that contains:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"id"}),": Unique identifier for the change"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"author"}),": Developer who created the change"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Changes"}),": The actual database modifications (createTable, addColumn, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optional elements"}),": Preconditions, rollback instructions, contexts, etc."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"3-tracking-tables",children:"3. Tracking Tables"}),"\n",(0,i.jsx)(n.p,{children:"Liquibase creates and maintains two special tables:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DATABASECHANGELOG"}),": Records all applied changesets (what, when, by whom)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DATABASECHANGELOGLOCK"}),": Prevents multiple instances from running simultaneously"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"properties-file-setup",children:"Properties File Setup"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"liquibase.properties"})," file contains database connection information and execution parameters:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-properties",children:"# Database connection\r\ndriver=com.mysql.cj.jdbc.Driver\r\nurl=jdbc:mysql://localhost:3306/your_database\r\nusername=your_username\r\npassword=your_password\r\n\r\n# Changelog location\r\nchangeLogFile=db/changelog/db.changelog-master.xml\r\n\r\n# Optional settings\r\nlogLevel=INFO\r\ncontexts=development\n"})}),"\n",(0,i.jsx)(n.h3,{id:"common-properties",children:"Common Properties"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Example"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"driver"})}),(0,i.jsx)(n.td,{children:"JDBC driver class"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"com.mysql.cj.jdbc.Driver"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"url"})}),(0,i.jsx)(n.td,{children:"Database URL"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"jdbc:mysql://localhost:3306/your_database"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"username"})}),(0,i.jsx)(n.td,{children:"Database username"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"your_username"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"password"})}),(0,i.jsx)(n.td,{children:"Database password"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"your_password"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"changeLogFile"})}),(0,i.jsx)(n.td,{children:"Main changelog file"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"db/changelog/db.changelog-master.xml"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"contexts"})}),(0,i.jsx)(n.td,{children:"Execution contexts"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"development,test"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"logLevel"})}),(0,i.jsx)(n.td,{children:"Logging verbosity"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"INFO"}),", ",(0,i.jsx)(n.code,{children:"DEBUG"}),", ",(0,i.jsx)(n.code,{children:"WARNING"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"classpath"})}),(0,i.jsx)(n.td,{children:"Additional classpath for finding resources"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"lib/mysql-connector-j-8.0.31.jar"})})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"command-line-vs-properties-file",children:"Command-line vs. Properties File"}),"\n",(0,i.jsx)(n.p,{children:"While properties files provide a convenient way to store configuration, they should be used carefully in version control. Best practices include:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Override via command line"}),": Use command-line parameters to override sensitive properties"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Environment variables"}),": Reference environment variables for credentials"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multiple property files"}),": Maintain separate files for different environments"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example command-line override:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'liquibase --url="jdbc:mysql://localhost:3306/database" --username=dev --password=devpass update\n'})}),"\n",(0,i.jsx)(n.h2,{id:"practical-usage",children:"Practical Usage"}),"\n",(0,i.jsx)(n.h3,{id:"common-commands",children:"Common Commands"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Command"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Example"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"update"})}),(0,i.jsx)(n.td,{children:"Apply pending changes"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"liquibase update"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"rollback"})}),(0,i.jsx)(n.td,{children:"Revert changes"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"liquibase rollback 1.0"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"status"})}),(0,i.jsx)(n.td,{children:"Show pending changes"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"liquibase status"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"diff"})}),(0,i.jsx)(n.td,{children:"Compare two databases"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"liquibase diff"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"generateChangeLog"})}),(0,i.jsx)(n.td,{children:"Create changelog from existing DB"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"liquibase generateChangeLog"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"clearCheckSums"})}),(0,i.jsx)(n.td,{children:"Reset checksums"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"liquibase clearCheckSums"})})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"integration-with-build-tools",children:"Integration with Build Tools"}),"\n",(0,i.jsx)(n.h4,{id:"maven-integration",children:"Maven Integration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<plugin>\r\n    <groupId>org.liquibase</groupId>\r\n    <artifactId>liquibase-maven-plugin</artifactId>\r\n    <version>4.9.1</version>\r\n    <configuration>\r\n        <propertyFile>src/main/resources/liquibase.properties</propertyFile>\r\n    </configuration>\r\n</plugin>\n"})}),"\n",(0,i.jsx)(n.h4,{id:"spring-boot-integration",children:"Spring Boot Integration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Bean\r\npublic SpringLiquibase liquibase(DataSource dataSource) {\r\n    SpringLiquibase liquibase = new SpringLiquibase();\r\n    liquibase.setDataSource(dataSource);\r\n    liquibase.setChangeLog("classpath:db/changelog/db.changelog-master.xml");\r\n    liquibase.setContexts("development,test");\r\n    return liquibase;\r\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"change-types-and-examples",children:"Change Types and Examples"}),"\n",(0,i.jsx)(n.h3,{id:"table-operations",children:"Table Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'\x3c!-- Create a new table --\x3e\r\n<changeSet id="create-products-table" author="developer">\r\n    <createTable tableName="PRODUCTS">\r\n        <column name="id" type="INT" autoIncrement="true">\r\n            <constraints primaryKey="true" nullable="false"/>\r\n        </column>\r\n        <column name="name" type="VARCHAR(255)"/>\r\n        <column name="price" type="DECIMAL(10,2)"/>\r\n    </createTable>\r\n</changeSet>\r\n\r\n\x3c!-- Add a column --\x3e\r\n<changeSet id="add-description-column" author="developer">\r\n    <addColumn tableName="PRODUCTS">\r\n        <column name="description" type="TEXT"/>\r\n    </addColumn>\r\n</changeSet>\r\n\r\n\x3c!-- Drop a table --\x3e\r\n<changeSet id="drop-old-table" author="developer">\r\n    <dropTable tableName="LEGACY_TABLE"/>\r\n</changeSet>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"data-operations",children:"Data Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'\x3c!-- Insert data --\x3e\r\n<changeSet id="insert-test-data" author="developer">\r\n    <insert tableName="USERS">\r\n        <column name="id" value="1"/>\r\n        <column name="username" value="admin"/>\r\n    </insert>\r\n</changeSet>\r\n\r\n\x3c!-- Load data from file --\x3e\r\n<changeSet id="load-product-data" author="developer">\r\n    <loadData tableName="PRODUCTS" file="data/products.csv">\r\n        <column name="id" type="NUMERIC"/>\r\n        <column name="name" type="STRING"/>\r\n        <column name="price" type="NUMERIC"/>\r\n    </loadData>\r\n</changeSet>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"using-sql-directly",children:"Using SQL Directly"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'\x3c!-- Custom SQL --\x3e\r\n<changeSet id="complex-query" author="developer">\r\n    <sql>\r\n        CREATE VIEW active_users AS\r\n        SELECT id, username FROM users WHERE status = \'active\';\r\n    </sql>\r\n    <rollback>DROP VIEW active_users;</rollback>\r\n</changeSet>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,i.jsx)(n.h3,{id:"preconditions",children:"Preconditions"}),"\n",(0,i.jsx)(n.p,{children:"Preconditions validate that certain conditions are met before applying a changeset:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<changeSet id="add-index" author="developer">\r\n    <preConditions onFail="MARK_RAN">\r\n        <tableExists tableName="USERS"/>\r\n        <columnExists tableName="USERS" columnName="email"/>\r\n    </preConditions>\r\n    <createIndex tableName="USERS" indexName="idx_user_email">\r\n        <column name="email"/>\r\n    </createIndex>\r\n</changeSet>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"contexts",children:"Contexts"}),"\n",(0,i.jsx)(n.p,{children:"Contexts allow you to control when changesets are executed:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<changeSet id="add-test-data" author="developer" context="test">\r\n    <insert tableName="USERS">\r\n        <column name="id" value="999"/>\r\n        <column name="username" value="test_user"/>\r\n    </insert>\r\n</changeSet>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"rollback-support",children:"Rollback Support"}),"\n",(0,i.jsx)(n.p,{children:"Explicit rollback instructions help Liquibase revert changes safely:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<changeSet id="add-status-column" author="developer">\r\n    <addColumn tableName="USERS">\r\n        <column name="status" type="VARCHAR(20)" defaultValue="active"/>\r\n    </addColumn>\r\n    <rollback>\r\n        <dropColumn tableName="USERS" columnName="status"/>\r\n    </rollback>\r\n</changeSet>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,i.jsx)(n.h4,{id:"checksum-mismatch",children:"Checksum Mismatch"}),"\n",(0,i.jsx)(n.p,{children:"Problem: When a changeset is modified after being applied, Liquibase detects a checksum mismatch."}),"\n",(0,i.jsx)(n.p,{children:"Solution: Clear checksums for a specific file or all files:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Clear all checksums\r\nliquibase clearCheckSums\r\n\r\n# Clear checksums for a specific file\r\nliquibase --changeLogFile=db/changelog/specific-file.xml clearCheckSums\n"})}),"\n",(0,i.jsx)(n.h4,{id:"database-lock-issues",children:"Database Lock Issues"}),"\n",(0,i.jsx)(n.p,{children:"Problem: If Liquibase terminates unexpectedly, it might leave the database locked."}),"\n",(0,i.jsx)(n.p,{children:"Solution: Manually release the lock:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Check lock status\r\nSELECT * FROM DATABASECHANGELOGLOCK WHERE ID = 1;\r\n\r\n-- Release the lock\r\nUPDATE DATABASECHANGELOGLOCK SET LOCKED = 0, LOCKGRANTED = NULL, LOCKEDBY = NULL WHERE ID = 1;\n"})}),"\n",(0,i.jsx)(n.h4,{id:"path-resolution-problems",children:"Path Resolution Problems"}),"\n",(0,i.jsx)(n.p,{children:"Problem: SQL files referenced in changesets with relative paths cannot be found."}),"\n",(0,i.jsxs)(n.p,{children:["Solution: Use the ",(0,i.jsx)(n.code,{children:"--searchPath"})," parameter to specify additional directories:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'liquibase --searchPath="path/to/sql/files,path/to/resources" update\n'})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"One Change Per Changeset"}),": Keep changesets small and focused on a single logical change"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use IDs Consistently"}),": Create a naming convention for changeset IDs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Include Rollback Instructions"}),": Provide explicit rollback steps where possible"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test Before Production"}),": Run changes in development and testing environments first"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Contexts Appropriately"}),": Separate environment-specific changes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Maintain a Master Changelog"}),": Use a master file that includes other changelog files"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Version Control"}),": Keep changelog files in the same repository as application code"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CI/CD Integration"}),": Automate database changes as part of your deployment pipeline"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-project-structure",children:"Example Project Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"src/\r\n\u251c\u2500\u2500 main/\r\n\u2502   \u251c\u2500\u2500 java/\r\n\u2502   \u2502   \u2514\u2500\u2500 com/\r\n\u2502   \u2502       \u2514\u2500\u2500 example/\r\n\u2502   \u2502           \u2514\u2500\u2500 Application.java\r\n\u2502   \u2514\u2500\u2500 resources/\r\n\u2502       \u251c\u2500\u2500 db/\r\n\u2502       \u2502   \u251c\u2500\u2500 changelog/\r\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 db.changelog-master.xml\r\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 db.changelog-1.0.xml\r\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 db.changelog-1.1.xml\r\n\u2502       \u2502   \u2502   \u2514\u2500\u2500 sql/\r\n\u2502       \u2502   \u2502       \u251c\u2500\u2500 create-procedures.sql\r\n\u2502       \u2502   \u2502       \u2514\u2500\u2500 seed-data.sql\r\n\u2502       \u2502   \u2514\u2500\u2500 migrations/\r\n\u2502       \u2502       \u2514\u2500\u2500 data/\r\n\u2502       \u2502           \u2514\u2500\u2500 initial-data.csv\r\n\u2502       \u2514\u2500\u2500 liquibase.properties\n"})}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"Liquibase provides a robust framework for managing database schema changes. By tracking changes in version control and automating their application, it eliminates many of the risks associated with database migrations. For developers new to the tool, focus on understanding changesets, proper configuration, and testing your changes thoroughly before applying them to production."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var r=s(6540);const i={},a=r.createContext(i);function l(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);