"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[188],{3148:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Errors/Liquibase Checksum Validation Issue","title":"Liquibase Checksum Validation Issue","description":"Checksum validation issues in Liquibase can be resolved by updating the checksums in the DATABASECHANGELOG table to match the modified changesets. This document outlines common causes, solutions, and best practices for handling these issues.","source":"@site/docs/Errors/Liquibase Checksum Validation Issue.md","sourceDirName":"Errors","slug":"/Errors/Liquibase Checksum Validation Issue","permalink":"/tk_book/Errors/Liquibase Checksum Validation Issue","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CannotCreateTransaction","permalink":"/tk_book/Errors/Cannotcreatetransaction"},"next":{"title":"\\"Problem In Line\\" Error","permalink":"/tk_book/Errors/ZK Exceptions"}}');var r=s(4848),c=s(8453);const o={},t="Liquibase Checksum Validation Issue",l={},a=[{value:"Problem Overview",id:"problem-overview",level:2},{value:"Common Causes",id:"common-causes",level:2},{value:"Resolution Methods",id:"resolution-methods",level:2},{value:"Method 1: Update Checksums via SQL",id:"method-1-update-checksums-via-sql",level:3},{value:"Method 2: Using Liquibase Commands",id:"method-2-using-liquibase-commands",level:3},{value:"Method 3: Using <code>validCheckSum</code> Tag",id:"method-3-using-validchecksum-tag",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Troubleshooting Tips",id:"troubleshooting-tips",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"liquibase-checksum-validation-issue",children:"Liquibase Checksum Validation Issue"})}),"\n",(0,r.jsxs)(n.p,{children:["Checksum validation issues in Liquibase can be resolved by updating the checksums in the ",(0,r.jsx)(n.code,{children:"DATABASECHANGELOG"})," table to match the modified changesets. This document outlines common causes, solutions, and best practices for handling these issues."]}),"\n",(0,r.jsx)(n.h2,{id:"problem-overview",children:"Problem Overview"}),"\n",(0,r.jsx)(n.p,{children:"Liquibase maintains database schema version control by calculating checksums for each changeset. When a changeset's content is modified without properly updating its checksum, Liquibase throws a validation error that looks like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"liquibase.exception.ValidationFailedException: Validation Failed:\r\n     1 change sets check sum\r\n     changelog.xml::1::author was: 8:d9cc830bd2a1f43eb6d0125891177d19 but is now: 8:f5e9ad5c50f8378269c4e934eece1b20\n"})}),"\n",(0,r.jsx)(n.h2,{id:"common-causes",children:"Common Causes"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Manual Changeset Modifications:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Direct edits to changelog files without proper version control"}),"\n",(0,r.jsx)(n.li,{children:"Whitespace or formatting changes"}),"\n",(0,r.jsx)(n.li,{children:"Changes to SQL statements within existing changesets"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Environment Differences:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Line ending differences (CRLF vs LF)"}),"\n",(0,r.jsx)(n.li,{children:"Character encoding inconsistencies"}),"\n",(0,r.jsx)(n.li,{children:"Different database versions across environments"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"resolution-methods",children:"Resolution Methods"}),"\n",(0,r.jsx)(n.h3,{id:"method-1-update-checksums-via-sql",children:"Method 1: Update Checksums via SQL"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"UPDATE DATABASECHANGELOG \r\nSET MD5SUM = '8:new_checksum_value' \r\nWHERE ID = 'changeset_id' \r\nAND AUTHOR = 'author_name' \r\nAND FILENAME = 'changelog_file.xml';\n"})}),"\n",(0,r.jsx)(n.h3,{id:"method-2-using-liquibase-commands",children:"Method 2: Using Liquibase Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clear all checksums\r\nliquibase clearChecksums\r\n\r\n# Update database to recalculate checksums\r\nliquibase update\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"method-3-using-validchecksum-tag",children:["Method 3: Using ",(0,r.jsx)(n.code,{children:"validCheckSum"})," Tag"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<changeSet id="1" author="dev">\r\n    <validCheckSum>8:old_checksum</validCheckSum>\r\n    <validCheckSum>8:new_checksum</validCheckSum>\r\n    \x3c!-- changeset content --\x3e\r\n</changeSet>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Version Control:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Always use source control for changelog files"}),"\n",(0,r.jsx)(n.li,{children:"Document changeset modifications in commit messages"}),"\n",(0,r.jsx)(n.li,{children:"Use meaningful changeset IDs and descriptions"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Change Management:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Avoid modifying existing changesets"}),"\n",(0,r.jsx)(n.li,{children:"Create new changesets for schema modifications"}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:'runOnChange="true"'})," for volatile objects like views or procedures"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Binary Logging Considerations:"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you encounter the error:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"liquibase.exception.DatabaseException: This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary logging is enabled\n"})}),"\n",(0,r.jsx)(n.p,{children:"You have two options:"}),"\n",(0,r.jsxs)(n.p,{children:["a) ",(0,r.jsx)(n.strong,{children:"Recommended:"})," Mark your functions appropriately:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE FUNCTION my_function() \r\nRETURNS INT\r\nDETERMINISTIC\r\nBEGIN\r\n    -- function logic\r\nEND;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["b) ",(0,r.jsx)(n.strong,{children:"Alternative:"})," Enable trust for function creators:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SET GLOBAL log_bin_trust_function_creators = 1;\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,r.jsx)(n.strong,{children:"Warning:"})," Enabling ",(0,r.jsx)(n.code,{children:"log_bin_trust_function_creators"})," globally may have security implications. Use with caution in production environments."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting-tips",children:"Troubleshooting Tips"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Verify Changes:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Compare changeset content across environments"}),"\n",(0,r.jsx)(n.li,{children:"Check for hidden characters or encoding issues"}),"\n",(0,r.jsx)(n.li,{children:"Review recent changelog modifications"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Database Consistency:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure all environments use the same database version"}),"\n",(0,r.jsx)(n.li,{children:"Verify changelog execution order"}),"\n",(0,r.jsx)(n.li,{children:"Check for environment-specific configurations"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Logging and Monitoring:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enable detailed Liquibase logging"}),"\n",(0,r.jsx)(n.li,{children:"Monitor changeset execution history"}),"\n",(0,r.jsx)(n.li,{children:"Document all manual interventions"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var i=s(6540);const r={},c=i.createContext(r);function o(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);