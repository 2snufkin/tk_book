"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[5407],{2003:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Best Practice/GitHub Workflow","title":"GitHub Workflow","description":"GitHub Workflow","source":"@site/docs/Best Practice/GitHub Workflow.md","sourceDirName":"Best Practice","slug":"/Best Practice/GitHub Workflow","permalink":"/tk_book/Best Practice/GitHub Workflow","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Developer\'s Best Practices","permalink":"/tk_book/Best Practice/Developer\'S Best Practices"},"next":{"title":"Entities","permalink":"/tk_book/Errors/Accessing Inaccessible Attribute"}}');var r=i(4848),t=i(8453);const o={},c=void 0,a={},l=[{value:"GitHub Workflow",id:"github-workflow",level:2},{value:"Best Practices",id:"best-practices",level:3},{value:"Bad Practices and Things to Avoid",id:"bad-practices-and-things-to-avoid",level:3},{value:"Protecting Branches",id:"protecting-branches",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"github-workflow",children:"GitHub Workflow"}),"\n",(0,r.jsx)(n.p,{children:"A successful collaboration workflow can greatly enhance project efficiency and maintainability. Here's a common workflow that many teams follow:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create a Branch:"})," Create a new branch for your feature or bug fix \u2192 ",(0,r.jsx)(n.code,{children:"git checkout -b <branch-name>"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Make Changes:"})," Make and modify your code within the branch."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Commit Changes:"})," Stage changes \u2192 ",(0,r.jsx)(n.code,{children:"git add <file>"}),". Commit changes with a descriptive message \u2192 ",(0,r.jsx)(n.code,{children:'git commit -m "Commit message"'}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pull Latest Changes:"})," Regularly pull latest changes from main \u2192 ",(0,r.jsx)(n.code,{children:"git pull origin main"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resolve Conflicts:"})," If conflicts occur, manually resolve them in conflicted files."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Push to Remote:"})," Push your branch to the remote repository \u2192 ",(0,r.jsx)(n.code,{children:"git push origin <branch-name>"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Open a Pull Request (PR):"})," Open a PR to merge your branch into main."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Code Review:"})," Reviewers provide feedback on your code changes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Address Feedback:"})," Make necessary changes based on the feedback."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Merge Changes:"})," After approval, merge the PR into main."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regular Maintenance:"})," Periodically clean up merged branches."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stay Updated:"})," Keep up with changes in main and rebase your branch if needed."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clear Commit Messages:"})," Write descriptive commit messages that explain the purpose of the change. Follow a consistent format."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Issue Tracking:"})," Link PRs to relevant issues in the repository to provide context and maintain a clear history of changes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation:"})," Maintain thorough documentation for the project, including README files, code comments, and user guides."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use Tags and Releases:"})," Tag versions of your software to provide stable points for users to reference. This is useful for tracking changes and providing a clear upgrade path."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Git Actions:"})," Leverage GitHub Actions for automating repetitive tasks like testing, building, and deploying. Maintain workflows in version control."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"bad-practices-and-things-to-avoid",children:"Bad Practices and Things to Avoid"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Force Pushing"}),": Avoid force pushing to shared branches like main. This can overwrite others' changes and create confusion."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Large Pull Requests"}),": PRs that are too large are hard to review and can introduce hidden issues. Keep PRs small and focused."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ignoring Code Reviews"}),": Don't skip code reviews. They ensure code quality and knowledge sharing among team members."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Neglecting Documentation"}),": Insufficient documentation can lead to confusion and hinder onboarding for new team members."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Directly Pushing to Main"}),": Avoid pushing directly to the main branch without a PR and proper review process."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"protecting-branches",children:"Protecting Branches"}),"\n",(0,r.jsx)(n.p,{children:"To maintain code quality and prevent accidental changes, consider implementing these branch protection rules:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Require Pull Request Reviews"}),"\n",(0,r.jsx)(n.li,{children:"Require Status Checks"}),"\n",(0,r.jsx)(n.li,{children:"Branch Protection Rules"}),"\n",(0,r.jsx)(n.li,{children:"Require Linear History"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);