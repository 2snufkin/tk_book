"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[1546],{1440:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>s});var i=t(4848),o=t(8453);const a={},l="Event Handling",r={id:"ZK/Event Handling",title:"Event Handling",description:"In ZK Framework, events play a crucial role in capturing user interactions and triggering corresponding actions. This guide provides an overview of handling events in ZK, emphasizing the general principles applicable to various scenarios.",source:"@site/docs/ZK/Event Handling.md",sourceDirName:"ZK",slug:"/ZK/Event Handling",permalink:"/tkbook/docs/ZK/Event Handling",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ZK Framework: Event Handling and Operations",permalink:"/tkbook/docs/ZK/Event Handling And Operations"},next:{title:"Annotations",permalink:"/tkbook/docs/ZK/Generic Forward Composer"}},d={},s=[{value:"View: The Template",id:"view-the-template",level:2},{value:"ViewModel: The Controller",id:"viewmodel-the-controller",level:2},{value:"@Command",id:"command",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"event-handling",children:"Event Handling"})}),"\n",(0,i.jsx)(n.p,{children:"In ZK Framework, events play a crucial role in capturing user interactions and triggering corresponding actions. This guide provides an overview of handling events in ZK, emphasizing the general principles applicable to various scenarios."}),"\n",(0,i.jsx)(n.h2,{id:"view-the-template",children:"View: The Template"}),"\n",(0,i.jsxs)(n.p,{children:["When writing buttons within a ZK template, the ",(0,i.jsx)(n.code,{children:"<button>"})," element is commonly used. Buttons can trigger events by utilizing the ",(0,i.jsx)(n.code,{children:"@command"})," attribute to bind to a ViewModel(Controller) method. Below is an example of how to write a button within a ZK template:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<template name="model">\n    <row>\n        \x3c!-- Other template content --\x3e\n\n        \x3c!-- Button for triggering an event --\x3e\n        <button label="Click me" onClick="@command(\'handleEvent\', parameter=each)" />\n    </row>\n</template>\n'})}),"\n",(0,i.jsx)(n.p,{children:"In this example:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"<button>"})," element is used to create a clickable button."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"label"})," attribute sets the text displayed on the button.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If you want it to come from a properties file for i18n use ",(0,i.jsx)(n.code,{children:"label=\"${c:l('general.cancel')}\""})]}),"\n",(0,i.jsxs)(n.li,{children:["If you want it to come from a variable in the ViewModel use ",(0,i.jsx)(n.code,{children:'label="@load(vm.buttonName)"'})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"onClick"})," attribute binds the button click event to a ViewModel method (",(0,i.jsx)(n.code,{children:"handleEvent"})," in this case) using the ",(0,i.jsx)(n.code,{children:"@command"})," annotation.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@command"}),": It allows declaring which method should be executed when a specific event occurs on a particular component. Use the ",(0,i.jsx)(n.code,{children:"@command"})," attribute in ZUL files to bind the event to the ViewModel method."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"parameter=each"})," part passes the template variable each as a parameter to the ViewModel method."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"viewmodel-the-controller",children:"ViewModel: The Controller"}),"\n",(0,i.jsx)(n.p,{children:"In the view model, you need to define a method to handle the event. The method should have the same name as the reference name in the template; otherwise, it won't work."}),"\n",(0,i.jsx)(n.h3,{id:"command",children:"@Command"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"@Command"})," annotation is a fundamental part of event handling in ZK. It is applied to methods in the ViewModel that should be invoked in response to UI events. The annotated method acts as a command, defining..."]}),"\n",(0,i.jsx)(n.p,{children:"(Truncated due to character limit)"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var i=t(6540);const o={},a=i.createContext(o);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);