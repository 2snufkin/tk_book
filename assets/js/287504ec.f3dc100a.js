"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[7169],{8713:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Tumorotek/How To/PDF Generation","title":"PDF Generation in the Tumorotek Application","description":"Overview","source":"@site/docs/Tumorotek/How To/PDF Generation.md","sourceDirName":"Tumorotek/How To","slug":"/Tumorotek/How To/PDF Generation","permalink":"/tk_book/Tumorotek/How To/PDF Generation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Naming Conventions","permalink":"/tk_book/Tumorotek/General/Naming Conventions"},"next":{"title":"Unit Tests","permalink":"/tk_book/Tumorotek/How To/Unit Tests"}}');var t=r(4848),i=r(8453);const o={},l="PDF Generation in the Tumorotek Application",a={},d=[{value:"<strong>Overview</strong>",id:"overview",level:2},{value:"<strong>Key Steps in PDF Generation</strong>",id:"key-steps-in-pdf-generation",level:2},{value:"<strong>1. User Interaction &amp; Customization</strong>",id:"1-user-interaction--customization",level:3},{value:"<strong>2. XML Structure Creation</strong>",id:"2-xml-structure-creation",level:3},{value:"<strong>Core Elements</strong>",id:"core-elements",level:4},{value:"<strong>Example XML Construction (Java Code)</strong>",id:"example-xml-construction-java-code",level:4},{value:"<strong>3. XSLT Transformation to XSL-FO</strong>",id:"3-xslt-transformation-to-xsl-fo",level:3},{value:"<strong>Key XSLT Mappings</strong>",id:"key-xslt-mappings",level:4},{value:"<strong>Example XSLT Snippet</strong>",id:"example-xslt-snippet",level:4},{value:"<strong>4. PDF Rendering with Apache FOP</strong>",id:"4-pdf-rendering-with-apache-fop",level:3},{value:"<strong>Steps in PDF Generation</strong>",id:"steps-in-pdf-generation",level:4},{value:"<strong>Workflow Diagram</strong>",id:"workflow-diagram",level:2},{value:"<strong>Specialized Use Cases</strong>",id:"specialized-use-cases",level:2},{value:"<strong>1. Dynamic Tables (e.g., Container Lists)</strong>",id:"1-dynamic-tables-eg-container-lists",level:3},{value:"<strong>2. Multi-Page Documents</strong>",id:"2-multi-page-documents",level:3},{value:"<strong>FAQ</strong>",id:"faq",level:2},{value:"<strong>Conclusion</strong>",id:"conclusion",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Utility Methods",id:"utility-methods",level:2},{value:"Example Content Section",id:"example-content-section",level:2}];function c(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"pdf-generation-in-the-tumorotek-application",children:"PDF Generation in the Tumorotek Application"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:(0,t.jsx)(n.strong,{children:"Overview"})}),"\n",(0,t.jsx)(n.p,{children:'The Tumorotek application generates PDF documents dynamically by structuring content in XML and transforming it into a formatted PDF using XSL-FO (Apache FOP). This process is typically triggered by user actions (e.g., clicking a "Print" button) and allows customization through modal dialogs (e.g., headers/footers).'}),"\n",(0,t.jsx)(n.p,{children:"The workflow consists of three main stages:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XML Document Creation"})," \u2013 A structured JDOM XML is generated, representing the PDF\u2019s content."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XSLT Transformation"})," \u2013 The XML is converted into XSL-FO (Formatting Objects) using predefined XSLT templates."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PDF Rendering"})," \u2013 Apache FOP processes the XSL-FO to produce the final PDF, which is then downloaded by the user."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This document explains each step in detail, including the XML schema, transformation logic, and key components involved."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"key-steps-in-pdf-generation",children:(0,t.jsx)(n.strong,{children:"Key Steps in PDF Generation"})}),"\n",(0,t.jsx)(n.h3,{id:"1-user-interaction--customization",children:(0,t.jsx)(n.strong,{children:"1. User Interaction & Customization"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Trigger:"}),' A user action (e.g., clicking "Print") invokes methods like ',(0,t.jsx)(n.code,{children:"onClick$print()"}),", which may open a modal for header/footer input."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Customization:"})," Users can define headers, footers, and other dynamic content (e.g., dates, logos) before generation."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-xml-structure-creation",children:(0,t.jsx)(n.strong,{children:"2. XML Structure Creation"})}),"\n",(0,t.jsx)(n.p,{children:"The system constructs a JDOM XML document with the following structure:"}),"\n",(0,t.jsx)(n.h4,{id:"core-elements",children:(0,t.jsx)(n.strong,{children:"Core Elements"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Element"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Example Usage"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"<Impression>"})})}),(0,t.jsx)(n.td,{children:"Root element containing all pages."}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<Impression><Page>...</Page></Impression>"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"<Page>"})})}),(0,t.jsx)(n.td,{children:"Represents a PDF page with a title and content."}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<Page><Titre>Bank Details</Titre>...</Page>"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"<Paragraphe>"})})}),(0,t.jsxs)(n.td,{children:["A content block with key-value pairs (",(0,t.jsx)(n.code,{children:"<CoupleValeur>"}),")."]}),(0,t.jsx)(n.td,{children:'Used for structured text (e.g., "Bank Name: XYZ").'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"<Liste>"})})}),(0,t.jsxs)(n.td,{children:["A table with headers (",(0,t.jsx)(n.code,{children:"<EnteteListe>"}),") and rows (",(0,t.jsx)(n.code,{children:"<LigneListe>"}),")."]}),(0,t.jsx)(n.td,{children:"Displays tabular data (e.g., container lists)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"<HautDePage>"})})," / ",(0,t.jsx)(n.code,{children:"<BasDePage>"})]}),(0,t.jsx)(n.td,{children:"Custom headers/footers."}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<HautDePage>Confidential Report</HautDePage>"})})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"example-xml-construction-java-code",children:(0,t.jsx)(n.strong,{children:"Example XML Construction (Java Code)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Create the root XML document  \r\nDocument document = ManagerLocator.getXmlUtils().createJDomDocument();  \r\nElement root = document.getRootElement();  \r\n\r\n// Add header/footer  \r\nManagerLocator.getXmlUtils().addHautDePage(root, "Custom Header", false, null);  \r\nManagerLocator.getXmlUtils().addBasDePage(root, "Footer with date: " + new Date());  \r\n\r\n// Add a page with a table of containers  \r\nEnteteListe headers = new EnteteListe(new String[] {"Code", "Name", "Temperature"});  \r\nLigneListe[] rows = new LigneListe[containers.size()];  \r\nListeElement table = new ListeElement(null, headers, rows);  \r\nManagerLocator.getXmlUtils().addListe(root, table);  \n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-xslt-transformation-to-xsl-fo",children:(0,t.jsx)(n.strong,{children:"3. XSLT Transformation to XSL-FO"})}),"\n",(0,t.jsxs)(n.p,{children:["The XML is converted into XSL-FO using an XSLT stylesheet (e.g., ",(0,t.jsx)(n.code,{children:"xslPdfMainResource.xsl"}),")."]}),"\n",(0,t.jsx)(n.h4,{id:"key-xslt-mappings",children:(0,t.jsx)(n.strong,{children:"Key XSLT Mappings"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"XML Element"}),(0,t.jsx)(n.th,{children:"XSL-FO Equivalent"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<Paragraphe>"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<fo:block>"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<Liste>"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<fo:table>"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<CoupleValeur>"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"<fo:inline>"})," (key-value pairs)"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<HautDePage>"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:'<fo:static-content flow-name="header">'})})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"example-xslt-snippet",children:(0,t.jsx)(n.strong,{children:"Example XSLT Snippet"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<xsl:template match="Paragraphe">  \r\n  <fo:block font-size="12pt">  \r\n    <xsl:value-of select="TitreParagraphe"/>  \r\n  </fo:block>  \r\n</xsl:template>  \n'})}),"\n",(0,t.jsx)(n.h3,{id:"4-pdf-rendering-with-apache-fop",children:(0,t.jsx)(n.strong,{children:"4. PDF Rendering with Apache FOP"})}),"\n",(0,t.jsx)(n.p,{children:"The XSL-FO document is processed into a PDF byte array:"}),"\n",(0,t.jsx)(n.h4,{id:"steps-in-pdf-generation",children:(0,t.jsx)(n.strong,{children:"Steps in PDF Generation"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Initialize FOP:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"FopFactory fopFactory = FopFactory.newInstance();  \r\nFOUserAgent foUserAgent = fopFactory.newFOUserAgent();  \n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transform XSL-FO to PDF:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"Fop fop = fopFactory.newFop(MimeConstants.MIME_PDF, foUserAgent, out);  \r\nTransformer transformer = TransformerFactory.newInstance().newTransformer();  \r\ntransformer.transform(new DOMSource(transformedXml), new SAXResult(fop.getDefaultHandler()));  \n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Output PDF:"})," The resulting byte array is sent to the user via ",(0,t.jsx)(n.code,{children:"Filedownload.save()"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"workflow-diagram",children:(0,t.jsx)(n.strong,{children:"Workflow Diagram"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"graph TD  \r\n    A[User Clicks 'Print'] --\x3e B[Open Header/Footer Modal]  \r\n    B --\x3e C[Submit Custom Headers]  \r\n    C --\x3e D[Build JDOM XML]  \r\n    D --\x3e E[Apply XSLT to Generate XSL-FO]  \r\n    E --\x3e F[Render PDF with Apache FOP]  \r\n    F --\x3e G[Download PDF]  \n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"specialized-use-cases",children:(0,t.jsx)(n.strong,{children:"Specialized Use Cases"})}),"\n",(0,t.jsx)(n.h3,{id:"1-dynamic-tables-eg-container-lists",children:(0,t.jsx)(n.strong,{children:"1. Dynamic Tables (e.g., Container Lists)"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XML Structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<Liste>  \r\n  <EnteteListe>  \r\n    <NomColonne>Code</NomColonne>  \r\n    <NomColonne>Temperature</NomColonne>  \r\n  </EnteteListe>  \r\n  <LigneListe>  \r\n    <Cellule>A1</Cellule>  \r\n    <Cellule>-80\xb0C</Cellule>  \r\n  </LigneListe>  \r\n</Liste>  \n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XSL-FO Output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<fo:table>  \r\n  <fo:table-header>  \r\n    <fo:table-cell><fo:block>Code</fo:block></fo:table-cell>  \r\n  </fo:table-header>  \r\n  <fo:table-body>  \r\n    <fo:table-row>  \r\n      <fo:table-cell><fo:block>A1</fo:block></fo:table-cell>  \r\n    </fo:table-row>  \r\n  </fo:table-body>  \r\n</fo:table>  \n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-multi-page-documents",children:(0,t.jsx)(n.strong,{children:"2. Multi-Page Documents"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"XML Structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<Impression>  \r\n  <Page><Titre>Page 1</Titre>...</Page>  \r\n  <Page><Titre>Page 2</Titre>...</Page>  \r\n</Impression>  \n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"faq",children:(0,t.jsx)(n.strong,{children:"FAQ"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Q: How are images (e.g., logos) included?"}),(0,t.jsx)(n.br,{}),"\n","\u2192 Images are referenced in XML (e.g., ",(0,t.jsx)(n.code,{children:'adrImages + "logo.png"'}),") and rendered via ",(0,t.jsx)(n.code,{children:"<fo:external-graphic>"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Q: Can the PDF layout be customized?"}),(0,t.jsx)(n.br,{}),"\n","\u2192 Yes, by modifying the XSLT templates (e.g., adjusting fonts, margins, or table styles)."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Q: How are empty fields handled?"}),(0,t.jsx)(n.br,{}),"\n","\u2192 Conditional logic in Java omits empty sections (e.g., displaying ",(0,t.jsx)(n.code,{children:'"-"'})," for missing data)."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:(0,t.jsx)(n.strong,{children:"Conclusion"})}),"\n",(0,t.jsx)(n.p,{children:"The Tumorotek PDF generation system leverages XML and XSL-FO to create structured, customizable documents. By separating content (XML) from styling (XSLT), the system ensures flexibility and maintainability. Future enhancements could include dynamic template selection or advanced formatting options."}),"\n",(0,t.jsxs)(n.p,{children:["For further details, refer to the ",(0,t.jsx)(n.code,{children:"XmlUtilsImpl"})," and ",(0,t.jsx)(n.code,{children:"XSLTransformer"})," classes in the codebase."]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Always wrap PDF generation in try-catch blocks"}),"\n",(0,t.jsx)(n.li,{children:"Provide user feedback for failures"}),"\n",(0,t.jsx)(n.li,{children:"Clean up resources in finally blocks"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Content Organization"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Split content generation into logical methods"}),"\n",(0,t.jsxs)(n.li,{children:["Use meaningful method names (e.g., ",(0,t.jsx)(n.code,{children:"addTable()"}),", ",(0,t.jsx)(n.code,{children:"addSummarySection()"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Pass page elements as parameters for content addition"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"User Experience"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Show loading indicators during generation"}),"\n",(0,t.jsx)(n.li,{children:"Provide clear feedback on success/failure"}),"\n",(0,t.jsx)(n.li,{children:"Use meaningful filenames with timestamps"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"utility-methods",children:"Utility Methods"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"XmlUtils"})," class provides several helpful methods:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"createJDomDocument()"}),": Creates empty document"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"addBasDePage()"}),": Adds footer"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"addHautDePage()"}),": Adds header"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"addPage()"}),": Creates new page"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"creerPdf()"}),": Converts document to PDF bytes"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-content-section",children:"Example Content Section"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"private void addContentSections(Element page) {\r\n    addTable(page);\r\n    addSummary(page);\r\n    addMetadata(page);\r\n}\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": Customize the filename prefix, headers, and footers according to your application's needs. Always test PDF generation with various content types and sizes to ensure proper formatting."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(6540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);