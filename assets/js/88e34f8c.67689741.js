"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[8234],{5077:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Java & Spring/SQL Stored Procedures","title":"SQL Stored Procedures","description":"SQL Stored Procedures: A Guide for Java + Spring + Liquibase Projects","source":"@site/docs/Java & Spring/SQL Stored Procedures.md","sourceDirName":"Java & Spring","slug":"/Java & Spring/SQL Stored Procedures","permalink":"/tk_book/Java & Spring/SQL Stored Procedures","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Resource Bundles in Java","permalink":"/tk_book/Java & Spring/ResourceBundle"},"next":{"title":"Apache POI Performance Optimization Guide: Choosing the Right Components","permalink":"/tk_book/Libraries/Apache Poi - Performance"}}');var t=n(4848),i=n(8453);const d={},c=void 0,l={},o=[{value:"SQL Stored Procedures: A Guide for Java + Spring + Liquibase Projects",id:"sql-stored-procedures-a-guide-for-java--spring--liquibase-projects",level:2},{value:"What are Stored Procedures?",id:"what-are-stored-procedures",level:2},{value:"Creating, Modifying, and Deleting Stored Procedures**",id:"creating-modifying-and-deleting-stored-procedures",level:2},{value:"Creating Stored Procedures",id:"creating-stored-procedures",level:3},{value:"The Esstinal",id:"the-esstinal",level:4},{value:"Using Liquibase",id:"using-liquibase",level:4},{value:"Modifying Stored Procedures",id:"modifying-stored-procedures",level:3},{value:"The Esstinal",id:"the-esstinal-1",level:4},{value:"Modifying Using Liquibase",id:"modifying-using-liquibase",level:4},{value:"Deleting Stored Procedures**",id:"deleting-stored-procedures",level:4},{value:"Deleting Using Liquibase",id:"deleting-using-liquibase",level:4}];function a(e){const r={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"sql-stored-procedures-a-guide-for-java--spring--liquibase-projects",children:"SQL Stored Procedures: A Guide for Java + Spring + Liquibase Projects"}),"\n",(0,t.jsx)(r.p,{children:"This document serves as a comprehensive guide for developers working on Java + Spring + Liquibase projects, focusing on SQL stored procedures. We'll cover creation, modification, deletion, Liquibase integration, and platform-specific syntax differences."}),"\n",(0,t.jsx)(r.h2,{id:"what-are-stored-procedures",children:"What are Stored Procedures?"}),"\n",(0,t.jsx)(r.p,{children:"Stored procedures are precompiled SQL statements saved in the database. They can accept parameters, perform operations, and return results. Using stored procedures can improve performance and provide a layer of abstraction between the application and database. Essentially, it's a routine stored in the database that can be executed by applications or other stored procedures."}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Benefits:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Improved Performance:"})," Stored procedures reduce network traffic as the code is executed on the database server."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Code Reusability:"})," Logic can be encapsulated and reused across multiple applications."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Enhanced Security:"})," Database access can be controlled by granting permissions to execute specific stored procedures."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Data Integrity:"})," Centralized data validation and business logic."]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"creating-modifying-and-deleting-stored-procedures",children:"Creating, Modifying, and Deleting Stored Procedures**"}),"\n",(0,t.jsx)(r.h3,{id:"creating-stored-procedures",children:"Creating Stored Procedures"}),"\n",(0,t.jsx)(r.h4,{id:"the-esstinal",children:"The Esstinal"}),"\n",(0,t.jsx)(r.p,{children:"The basic syntax for creating a stored procedure involves:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Specifying the procedure name."}),"\n",(0,t.jsx)(r.li,{children:"Defining input and output parameters (if any)."}),"\n",(0,t.jsx)(r.li,{children:"Writing the SQL code within the procedure body."}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Example (MySQL):"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"DELIMITER //\r\nCREATE PROCEDURE GetCustomerByID(IN customerID INT, OUT customerName VARCHAR(255))\r\nBEGIN\r\n    SELECT name INTO customerName FROM customers WHERE id = customerID;\r\nEND //\r\nDELIMITER ;\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Example (Oracle):"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"CREATE OR REPLACE PROCEDURE GetCustomerByID(customerID IN NUMBER, customerName OUT VARCHAR2) AS\r\nBEGIN\r\n    SELECT name INTO customerName FROM customers WHERE id = customerID;\r\nEND;\r\n/\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Explanation:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"DELIMITER //"})," (MySQL): Changes the statement delimiter to ",(0,t.jsx)(r.code,{children:"//"})," to allow multiple statements within the procedure. ",(0,t.jsx)(r.code,{children:"DELIMITER ;"})," resets it."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"CREATE PROCEDURE"})," (MySQL) / ",(0,t.jsx)(r.code,{children:"CREATE OR REPLACE PROCEDURE"})," (Oracle): Creates a new stored procedure or replaces an existing one."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"IN"})," and ",(0,t.jsx)(r.code,{children:"OUT"}),": Define input and output parameters."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"BEGIN...END"}),": Encloses the procedure's SQL code."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"/"})," (Oracle): Executes the procedure creation statement."]}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"using-liquibase",children:"Using Liquibase"}),"\n",(0,t.jsx)(r.p,{children:"Liquibase is a database schema change management tool. To create a stored procedure using Liquibase:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Create a new changeset in your Liquibase changelog file."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["Use the ",(0,t.jsx)(r.code,{children:"<createProcedure>"})," tag or ",(0,t.jsx)(r.code,{children:"<sql>"})," tag for more complex procedures."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["Example using ",(0,t.jsx)(r.code,{children:"<createProcedure>"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'<changeSet id="create-procedure-example" author="junior-dev">\r\n    <createProcedure>\r\n        CREATE PROCEDURE get_employee_count(OUT count INT)\r\n        BEGIN\r\n            SELECT COUNT(*) INTO count FROM employees;\r\n        END;\r\n    </createProcedure>\r\n</changeSet>\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Example using ",(0,t.jsx)(r.code,{children:"<sql>"})," tag (recommended for complex procedures):"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'<changeSet id="create-complex-procedure" author="junior-dev">\r\n    <sql splitStatements="false">\r\n        CREATE PROCEDURE complex_proc(IN param1 INT, OUT param2 VARCHAR(50))\r\n        BEGIN\r\n            -- Procedure body\r\n            SELECT some_column INTO param2 FROM some_table WHERE id = param1;\r\n        END\r\n    </sql>\r\n</changeSet>\n'})}),"\n",(0,t.jsx)(r.p,{children:'Note: Use splitStatements="false" to prevent Liquibase from attempting to split the procedure body11.'}),"\n",(0,t.jsx)(r.h3,{id:"modifying-stored-procedures",children:"Modifying Stored Procedures"}),"\n",(0,t.jsx)(r.h4,{id:"the-esstinal-1",children:"The Esstinal"}),"\n",(0,t.jsxs)(r.p,{children:["Modifying a stored procedure usually involves using ",(0,t.jsx)(r.code,{children:"ALTER PROCEDURE"})," (MySQL) or ",(0,t.jsx)(r.code,{children:"CREATE OR REPLACE PROCEDURE"})," (Oracle)."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Example (MySQL):"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"ALTER PROCEDURE GetCustomerByID(IN customerID INT, OUT customerName VARCHAR(255))\r\nBEGIN\r\n    SELECT name, address INTO customerName, @customerAddress FROM customers WHERE id = customerID;\r\nEND;\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Example (Oracle):"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"CREATE OR REPLACE PROCEDURE GetCustomerByID(customerID IN NUMBER, customerName OUT VARCHAR2) AS\r\nBEGIN\r\n    SELECT name, address INTO customerName, @customerAddress FROM customers WHERE id = customerID;\r\nEND;\r\n/\n"})}),"\n",(0,t.jsxs)(r.p,{children:["In most cases, for Oracle, you simply recreate the procedure with the ",(0,t.jsx)(r.code,{children:"CREATE OR REPLACE"})," syntax."]}),"\n",(0,t.jsx)(r.h4,{id:"modifying-using-liquibase",children:"Modifying Using Liquibase"}),"\n",(0,t.jsx)(r.p,{children:"To modify an existing procedure:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"Create a new changeset in your Liquibase changelog."}),"\n",(0,t.jsx)(r.li,{children:"Drop the existing procedure."}),"\n",(0,t.jsx)(r.li,{children:"Create the modified procedure."}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Example:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'<changeSet id="modify-procedure-example" author="junior-dev">\r\n    <dropProcedure procedureName="get_employee_count"/>\r\n    <createProcedure>\r\n        CREATE PROCEDURE get_employee_count(IN dept_id INT, OUT count INT)\r\n        BEGIN\r\n            SELECT COUNT(*) INTO count FROM employees WHERE department_id = dept_id;\r\n        END;\r\n    </createProcedure>\r\n</changeSet>\n'})}),"\n",(0,t.jsx)(r.p,{children:"or"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'<changeSet id="update-procedure-example" author="junior-dev" runOnChange="true">\r\n    <createProcedure>\r\n        CREATE PROCEDURE get_employee_count(IN dept_id INT, OUT count INT)\r\n        BEGIN\r\n            SELECT COUNT(*) INTO count FROM employees WHERE department_id = dept_id;\r\n        END;\r\n    </createProcedure>\r\n</changeSet>\r\n\n'})}),"\n",(0,t.jsx)(r.h4,{id:"deleting-stored-procedures",children:"Deleting Stored Procedures**"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Example (MySQL):"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"DROP PROCEDURE IF EXISTS GetCustomerByID;\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Example (Oracle):"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"DROP PROCEDURE GetCustomerByID;\n"})}),"\n",(0,t.jsx)(r.h4,{id:"deleting-using-liquibase",children:"Deleting Using Liquibase"}),"\n",(0,t.jsx)(r.p,{children:"To delete a stored procedure:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'<changeSet id="delete-procedure-example" author="junior-dev">\r\n    <dropProcedure procedureName="get_employee_count"/>\r\n</changeSet>\n'})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"3. Liquibase Integration"})}),"\n",(0,t.jsx)(r.p,{children:"Liquibase is crucial for managing database schema changes in a version-controlled manner. To ensure Liquibase correctly updates stored procedures, follow these steps:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"3.1. Create a SQL Changelog File"})}),"\n",(0,t.jsxs)(r.p,{children:["Create a ",(0,t.jsx)(r.code,{children:".sql"})," file in your Liquibase changelog directory."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsxs)(r.strong,{children:["Example (e.g., ",(0,t.jsx)(r.code,{children:"db/changelog/changes/v1.0/create_customer_procedures.sql"}),"):"]})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"--liquibase formatted sql\r\n\r\n--changeset yourname:1\r\n--comment: Creates the GetCustomerByID stored procedure.\r\nDELIMITER //\r\nCREATE PROCEDURE GetCustomerByID(IN customerID INT, OUT customerName VARCHAR(255))\r\nBEGIN\r\n    SELECT name INTO customerName FROM customers WHERE id = customerID;\r\nEND //\r\nDELIMITER ;\r\n\r\n--changeset yourname:2\r\n--comment: Creates another procedure.\r\nCREATE OR REPLACE PROCEDURE AnotherProcedure(inputParam IN NUMBER) AS\r\nBEGIN\r\n    -- your logic\r\n    NULL;\r\nEND;\r\n/\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"3.2. Ensure Liquibase Updates Existing Procedures"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsxs)(r.strong,{children:[(0,t.jsx)(r.code,{children:"CREATE OR REPLACE"})," (Oracle):"]})," Oracle's ",(0,t.jsx)(r.code,{children:"CREATE OR REPLACE"})," ensures that if a procedure already exists, it will be replaced with the new version. This naturally supports updates."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsxs)(r.strong,{children:[(0,t.jsx)(r.code,{children:"DROP PROCEDURE IF EXISTS"})," + ",(0,t.jsx)(r.code,{children:"CREATE PROCEDURE"})," (MySQL):"]})," For MySQL, the recommended approach is to ",(0,t.jsx)(r.code,{children:"DROP"})," the procedure if it exists and then ",(0,t.jsx)(r.code,{children:"CREATE"})," it again. This ensures that changes are applied correctly."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Liquibase Checksums:"})," Liquibase uses checksums to track changes. If you modify a stored procedure, Liquibase will detect the change and apply the update during the next database migration."]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"3.3. Liquibase Changelog XML"})}),"\n",(0,t.jsx)(r.p,{children:"Include the SQL changelog file in your main Liquibase changelog XML file."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'<databaseChangeLog\r\n        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"\r\n        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog\r\n         qqhttp://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">\r\n\r\n    <include file="db/changelog/changes/v1.0/create_customer_procedures.sql"/>\r\n\r\n</databaseChangeLog>\n'})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"4. Key Syntax Differences: MySQL vs. Oracle"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{style:{textAlign:"left"},children:"Feature"}),(0,t.jsx)(r.th,{style:{textAlign:"left"},children:"MySQL"}),(0,t.jsx)(r.th,{style:{textAlign:"left"},children:"Oracle"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{style:{textAlign:"left"},children:"Delimiter"}),(0,t.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,t.jsx)(r.code,{children:"DELIMITER //"}),", ",(0,t.jsx)(r.code,{children:"DELIMITER ;"})]}),(0,t.jsx)(r.td,{style:{textAlign:"left"},children:(0,t.jsx)(r.code,{children:"/"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{style:{textAlign:"left"},children:"Creation/Modify"}),(0,t.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,t.jsx)(r.code,{children:"CREATE PROCEDURE"}),", ",(0,t.jsx)(r.code,{children:"ALTER PROCEDURE"})]}),(0,t.jsx)(r.td,{style:{textAlign:"left"},children:(0,t.jsx)(r.code,{children:"CREATE OR REPLACE PROCEDURE"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{style:{textAlign:"left"},children:"Variable Declaration"}),(0,t.jsx)(r.td,{style:{textAlign:"left"},children:(0,t.jsx)(r.code,{children:"DECLARE variable_name data_type;"})}),(0,t.jsx)(r.td,{style:{textAlign:"left"},children:(0,t.jsx)(r.code,{children:"variable_name data_type;"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{style:{textAlign:"left"},children:"Parameter Modes"}),(0,t.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,t.jsx)(r.code,{children:"IN"}),", ",(0,t.jsx)(r.code,{children:"OUT"}),", ",(0,t.jsx)(r.code,{children:"INOUT"})]}),(0,t.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,t.jsx)(r.code,{children:"IN"}),", ",(0,t.jsx)(r.code,{children:"OUT"})]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{style:{textAlign:"left"},children:"Data Types"}),(0,t.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,t.jsx)(r.code,{children:"INT"}),", ",(0,t.jsx)(r.code,{children:"VARCHAR"}),", ",(0,t.jsx)(r.code,{children:"DATE"}),", ",(0,t.jsx)(r.code,{children:"DATETIME"})]}),(0,t.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,t.jsx)(r.code,{children:"NUMBER"}),", ",(0,t.jsx)(r.code,{children:"VARCHAR2"}),", ",(0,t.jsx)(r.code,{children:"DATE"}),", ",(0,t.jsx)(r.code,{children:"TIMESTAMP"})]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{style:{textAlign:"left"},children:"Error Handling"}),(0,t.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,t.jsx)(r.code,{children:"DECLARE CONTINUE HANDLER"}),", ",(0,t.jsx)(r.code,{children:"SIGNAL"})]}),(0,t.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,t.jsx)(r.code,{children:"EXCEPTION"}),", ",(0,t.jsx)(r.code,{children:"RAISE_APPLICATION_ERROR"})]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{style:{textAlign:"left"},children:"Block Delimiters"}),(0,t.jsx)(r.td,{style:{textAlign:"left"},children:(0,t.jsx)(r.code,{children:"BEGIN...END"})}),(0,t.jsx)(r.td,{style:{textAlign:"left"},children:(0,t.jsx)(r.code,{children:"BEGIN...END;"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{style:{textAlign:"left"},children:"Null handling in if statements"}),(0,t.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,t.jsx)(r.code,{children:"IS NULL"}),", ",(0,t.jsx)(r.code,{children:"IS NOT NULL"})]}),(0,t.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,t.jsx)(r.code,{children:"variable IS NULL"}),", ",(0,t.jsx)(r.code,{children:"variable IS NOT NULL"})]})]})]})]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"5. Best Practices"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Naming Conventions:"})," Use clear and descriptive names for stored procedures and parameters."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Error Handling:"})," Implement robust error handling to prevent unexpected issues."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Parameter Validation:"})," Validate input parameters to ensure data integrity."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Documentation:"})," Document stored procedures, including their purpose, parameters, and return values."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Testing:"})," Thoroughly test stored procedures to ensure they function correctly."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Security:"})," Grant minimal necessary permissions to execute stored procedures."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Liquibase:"})," Always use Liquibase for managing stored procedure changes."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Keep Procedures Small:"})," Design stored procedures to perform specific, well-defined tasks. Avoid overly complex procedures."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Use transactions:"})," Use transactions within your stored procedures to ensure data consistency."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Use comments:"})," add comments to your procedures to explain what the code is doing."]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"6. Java and Spring Integration"})}),"\n",(0,t.jsxs)(r.p,{children:["In your Java and Spring application, you can call stored procedures using ",(0,t.jsx)(r.code,{children:"JdbcTemplate"})," or ",(0,t.jsx)(r.code,{children:"NamedParameterJdbcTemplate"}),"."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Example (Spring JdbcTemplate):"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'import org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.jdbc.core.JdbcTemplate;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport java.sql.Types;\r\n\r\n@Repository\r\npublic class CustomerRepository {\r\n\r\n    @Autowired\r\n    private JdbcTemplate jdbcTemplate;\r\n\r\n    public String getCustomerNameById(int customerId) {\r\n        String sql = "{call GetCustomerByID(?, ?)}";\r\n        Object[] params = {customerId, null};\r\n        int[] types = {Types.INTEGER, Types.VARCHAR};\r\n        String[] outParamName = {"customerName"};\r\n        return jdbcTemplate.call(\r\n                (callableStatement) -> {\r\n                    for (int i = 0; i < params.length; i++) {\r\n                        if (i == 0) {\r\n                            callableStatement.setInt(i + 1, (int) params[i]);\r\n                        } else {\r\n                            callableStatement.registerOutParameter(i + 1, types[i]);\r\n                        }\r\n                    }\r\n                    callableStatement.execute();\r\n                    return callableStatement.getString(2);\r\n                }, outParamName\r\n        ).get("customerName");\r\n    }\r\n}\n'})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>c});var s=n(6540);const t={},i=s.createContext(t);function d(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);