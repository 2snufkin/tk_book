"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[3841],{5454:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Libraries/Apache Poi","title":"Apache Poi","description":"Apache POI User Guide Manual","source":"@site/docs/Libraries/Apache Poi.md","sourceDirName":"Libraries","slug":"/Libraries/Apache Poi","permalink":"/tk_book/Libraries/Apache Poi","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Apache POI Performance Optimization Guide: Choosing the Right Components","permalink":"/tk_book/Libraries/Apache Poi - Performance"},"next":{"title":"Liquibase","permalink":"/tk_book/Libraries/Liquibase"}}');var l=n(4848),o=n(8453);const a={},i=void 0,s={},d=[{value:"Apache POI User Guide Manual",id:"apache-poi-user-guide-manual",level:2},{value:"1. New Workbook",id:"1-new-workbook",level:3},{value:"Creating Workbooks",id:"creating-workbooks",level:4},{value:"Saving Workbooks",id:"saving-workbooks",level:4},{value:"2. New Sheet",id:"2-new-sheet",level:3},{value:"Creating Sheets",id:"creating-sheets",level:4},{value:"3. Creating Cells",id:"3-creating-cells",level:3},{value:"Working with Cells",id:"working-with-cells",level:4},{value:"4. Creating Date Cells",id:"4-creating-date-cells",level:3},{value:"Handling Date Values",id:"handling-date-values",level:4},{value:"5. Working with Different Types of Cells",id:"5-working-with-different-types-of-cells",level:3},{value:"Handling Different Types",id:"handling-different-types",level:4},{value:"6. Demonstrating Alignment Options",id:"6-demonstrating-alignment-options",level:3},{value:"Cell Alignment",id:"cell-alignment",level:4},{value:"7. Working with Borders",id:"7-working-with-borders",level:3},{value:"Adding Borders",id:"adding-borders",level:4},{value:"8. Iterating over Rows and Cells",id:"8-iterating-over-rows-and-cells",level:3},{value:"Iterating through Data",id:"iterating-through-data",level:4},{value:"9. Merging Cells",id:"9-merging-cells",level:3},{value:"Cell Merging",id:"cell-merging",level:4},{value:"10. Working with Fonts",id:"10-working-with-fonts",level:3},{value:"Customizing Fonts",id:"customizing-fonts",level:4},{value:"11. Using Newlines in Cells",id:"11-using-newlines-in-cells",level:3},{value:"Creating Newlines",id:"creating-newlines",level:4},{value:"12. Data Formats",id:"12-data-formats",level:3},{value:"Formatting Data",id:"formatting-data",level:4},{value:"13. Fit Sheet to One Page",id:"13-fit-sheet-to-one-page",level:3},{value:"Adjusting Sheet for Printing",id:"adjusting-sheet-for-printing",level:4},{value:"14. Set Print Area",id:"14-set-print-area",level:3},{value:"Defining Print Area",id:"defining-print-area",level:4},{value:"15. Set Page Numbers on Footer",id:"15-set-page-numbers-on-footer",level:3},{value:"Adding Page Numbers",id:"adding-page-numbers",level:4},{value:"16. Using the Convenience Functions",id:"16-using-the-convenience-functions",level:3},{value:"Simplified Styling and Formatting",id:"simplified-styling-and-formatting",level:4},{value:"17. Shift Rows up or down on a Sheet",id:"17-shift-rows-up-or-down-on-a-sheet",level:3},{value:"Adjusting Row Positions",id:"adjusting-row-positions",level:4},{value:"18. Set a Sheet as Selected",id:"18-set-a-sheet-as-selected",level:3},{value:"Marking a Sheet as Selected",id:"marking-a-sheet-as-selected",level:4},{value:"19. Set the Zoom Magnification",id:"19-set-the-zoom-magnification",level:3},{value:"Adjusting Sheet Zoom",id:"adjusting-sheet-zoom",level:4},{value:"20. Headers and Footers",id:"20-headers-and-footers",level:3},{value:"Adding Headers and Footers",id:"adding-headers-and-footers",level:4},{value:"21. Outlining",id:"21-outlining",level:3},{value:"Grouping and Outlining",id:"grouping-and-outlining",level:4},{value:"22. Creating Named Range / Named Cell",id:"22-creating-named-range--named-cell",level:2},{value:"create named range for a single cell using AreaReference",id:"create-named-range-for-a-single-cell-using-areareference",level:3},{value:"create named range for a single cell using CellReference",id:"create-named-range-for-a-single-cell-using-cellreference",level:3},{value:"create named range for an area using AreaReference",id:"create-named-range-for-an-area-using-areareference",level:3},{value:"create named formula",id:"create-named-formula",level:3},{value:"23. Reading from Named Range / Named Cell",id:"23-reading-from-named-range--named-cell",level:2},{value:"Reading from non-contiguous Named Ranges",id:"reading-from-non-contiguous-named-ranges",level:3},{value:"24. Adjust column width to fit the contents",id:"24-adjust-column-width-to-fit-the-contents",level:2},{value:"25. Conditional Formatting",id:"25-conditional-formatting",level:2},{value:"26. Hiding and Un-Hiding Rows",id:"26-hiding-and-un-hiding-rows",level:2},{value:"27.Setting Cell Properties",id:"27setting-cell-properties",level:2},{value:"28.Drawing Borders",id:"28drawing-borders",level:2},{value:"29.Creating a Pivot Table",id:"29creating-a-pivot-table",level:2},{value:"29.  Cells with multiple styles (Rich Text Strings)",id:"29--cells-with-multiple-styles-rich-text-strings",level:2},{value:"HSSF Example",id:"hssf-example",level:3},{value:"XSSF Example",id:"xssf-example",level:3}];function c(e){const r={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.h2,{id:"apache-poi-user-guide-manual",children:"Apache POI User Guide Manual"}),"\n",(0,l.jsx)(r.h3,{id:"1-new-workbook",children:"1. New Workbook"}),"\n",(0,l.jsx)(r.h4,{id:"creating-workbooks",children:"Creating Workbooks"}),"\n",(0,l.jsxs)(r.p,{children:["To create a new workbook, use either ",(0,l.jsx)(r.code,{children:"HSSFWorkbook"})," for ",(0,l.jsx)(r.code,{children:".xls"})," format or ",(0,l.jsx)(r.code,{children:"XSSFWorkbook"})," for ",(0,l.jsx)(r.code,{children:".xlsx"})," format."]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:"Workbook wb = new HSSFWorkbook(); // or new XSSFWorkbook();\n"})}),"\n",(0,l.jsx)(r.h4,{id:"saving-workbooks",children:"Saving Workbooks"}),"\n",(0,l.jsxs)(r.p,{children:["Save the workbook to a file using ",(0,l.jsx)(r.code,{children:"wb.write(fileOut)"})," where ",(0,l.jsx)(r.code,{children:"fileOut"})," is an ",(0,l.jsx)(r.code,{children:"OutputStream"}),"."]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'try (OutputStream fileOut = new FileOutputStream("workbook.xls")) {\r\n    wb.write(fileOut);\r\n}\n'})}),"\n",(0,l.jsx)(r.h3,{id:"2-new-sheet",children:"2. New Sheet"}),"\n",(0,l.jsx)(r.h4,{id:"creating-sheets",children:"Creating Sheets"}),"\n",(0,l.jsx)(r.p,{children:"To create a new sheet in a workbook:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Sheet sheet1 = wb.createSheet("new sheet");\r\nSheet sheet2 = wb.createSheet("second sheet");\n'})}),"\n",(0,l.jsxs)(r.p,{children:["Ensure sheet names are valid (max 31 characters, specific character restrictions). Use ",(0,l.jsx)(r.code,{children:"WorkbookUtil.createSafeSheetName(nameProposal)"})," to create valid names."]}),"\n",(0,l.jsx)(r.h3,{id:"3-creating-cells",children:"3. Creating Cells"}),"\n",(0,l.jsx)(r.h4,{id:"working-with-cells",children:"Working with Cells"}),"\n",(0,l.jsx)(r.p,{children:"To create cells and set their values:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Row row = sheet.createRow(0);\r\nCell cell1 = row.createCell(0);\r\ncell1.setCellValue(1);\r\n\r\nrow.createCell(1).setCellValue(1.2);\r\n\r\nCell cell3 = row.createCell(2);\r\ncell3.setCellValue("This is a string");\r\n\r\nCell cell4 = row.createCell(3);\r\ncell4.setCellValue(true);\n'})}),"\n",(0,l.jsx)(r.h3,{id:"4-creating-date-cells",children:"4. Creating Date Cells"}),"\n",(0,l.jsx)(r.h4,{id:"handling-date-values",children:"Handling Date Values"}),"\n",(0,l.jsx)(r.p,{children:"To work with date values:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Cell cell1 = row.createCell(0);\r\ncell1.setCellValue(new Date());\r\n\r\nCreationHelper createHelper = wb.getCreationHelper();\r\nCellStyle cellStyle = wb.createCellStyle();\r\ncellStyle.setDataFormat(\r\n    createHelper.createDataFormat().getFormat("m/d/yy h:mm"));\r\n\r\nCell cell2 = row.createCell(1);\r\ncell2.setCellValue(new Date());\r\ncell2.setCellStyle(cellStyle);\r\n\r\nCell cell3 = row.createCell(2);\r\ncell3.setCellValue(Calendar.getInstance());\r\ncell3.setCellStyle(cellStyle);\n'})}),"\n",(0,l.jsx)(r.h3,{id:"5-working-with-different-types-of-cells",children:"5. Working with Different Types of Cells"}),"\n",(0,l.jsx)(r.h4,{id:"handling-different-types",children:"Handling Different Types"}),"\n",(0,l.jsx)(r.p,{children:"Cells can contain various types of data:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'row.createCell(0).setCellValue(1.1);\r\nrow.createCell(1).setCellValue(new Date());\r\nrow.createCell(2).setCellValue(Calendar.getInstance());\r\nrow.createCell(3).setCellValue("a string");\r\nrow.createCell(4).setCellValue(true);\r\nrow.createCell(5).setCellType(CellType.ERROR);\n'})}),"\n",(0,l.jsx)(r.h3,{id:"6-demonstrating-alignment-options",children:"6. Demonstrating Alignment Options"}),"\n",(0,l.jsx)(r.h4,{id:"cell-alignment",children:"Cell Alignment"}),"\n",(0,l.jsxs)(r.p,{children:["Adjust cell alignment using ",(0,l.jsx)(r.code,{children:"setAlignment"})," and ",(0,l.jsx)(r.code,{children:"setVerticalAlignment"}),":"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:"row.setHeightInPoints(30);\r\ncreateCell(wb, row, 0, HorizontalAlignment.CENTER, VerticalAlignment.BOTTOM);\r\ncreateCell(wb, row, 1, HorizontalAlignment.CENTER_SELECTION, VerticalAlignment.BOTTOM);\r\n// Add more cells with different alignments\n"})}),"\n",(0,l.jsx)(r.h3,{id:"7-working-with-borders",children:"7. Working with Borders"}),"\n",(0,l.jsx)(r.h4,{id:"adding-borders",children:"Adding Borders"}),"\n",(0,l.jsx)(r.p,{children:"Style cells with borders:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:"CellStyle style = wb.createCellStyle();\r\nstyle.setBorderBottom(BorderStyle.THIN);\r\nstyle.setBottomBorderColor(IndexedColors.BLACK.getIndex());\r\nstyle.setBorderLeft(BorderStyle.THIN);\r\nstyle.setLeftBorderColor(IndexedColors.GREEN.getIndex());\r\n// Add more border styles as needed\r\n\r\nCell cell = row.createCell(1);\r\ncell.setCellValue(4);\r\ncell.setCellStyle(style);\n"})}),"\n",(0,l.jsx)(r.h3,{id:"8-iterating-over-rows-and-cells",children:"8. Iterating over Rows and Cells"}),"\n",(0,l.jsx)(r.h4,{id:"iterating-through-data",children:"Iterating through Data"}),"\n",(0,l.jsx)(r.p,{children:"Iterate over rows and cells in a sheet:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:"for (Sheet sheet : wb) {\r\n    for (Row row : sheet) {\r\n        for (Cell cell : row) {\r\n            // Process each cell here\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,l.jsx)(r.h3,{id:"9-merging-cells",children:"9. Merging Cells"}),"\n",(0,l.jsx)(r.h4,{id:"cell-merging",children:"Cell Merging"}),"\n",(0,l.jsxs)(r.p,{children:["Merge cells using ",(0,l.jsx)(r.code,{children:"sheet.addMergedRegion(CellRangeAddress)"}),":"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Cell cell = row.createCell(1);\r\ncell.setCellValue("This is a test of merging");\r\n\r\nsheet.addMergedRegion(new CellRangeAddress(\r\n        1, // first row (0-based)\r\n        1, // last row  (0-based)\r\n        1, // first column (0-based)\r\n        2  // last column  (0-based)\r\n));\n'})}),"\n",(0,l.jsx)(r.h3,{id:"10-working-with-fonts",children:"10. Working with Fonts"}),"\n",(0,l.jsx)(r.h4,{id:"customizing-fonts",children:"Customizing Fonts"}),"\n",(0,l.jsx)(r.p,{children:"Customize cell fonts:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Font font = wb.createFont();\r\nfont.setFontHeightInPoints((short)24);\r\nfont.setFontName("Courier New");\r\nfont.setItalic(true);\r\nfont.setStrikeout(true);\r\n\r\nCellStyle style = wb.createCellStyle();\r\nstyle.setFont(font);\r\n\r\nCell cell = row.createCell(1);\r\ncell.setCellValue("This is a test of fonts");\r\ncell.setCellStyle(style);\n'})}),"\n",(0,l.jsx)(r.hr,{}),"\n",(0,l.jsx)(r.p,{children:"Here is the continuation of the Apache POI user guide manual based on additional functionalities like using newlines in cells, data formats, fitting sheets to one page, setting print areas, headers and footers, and other advanced features."}),"\n",(0,l.jsx)(r.hr,{}),"\n",(0,l.jsx)(r.h3,{id:"11-using-newlines-in-cells",children:"11. Using Newlines in Cells"}),"\n",(0,l.jsx)(r.h4,{id:"creating-newlines",children:"Creating Newlines"}),"\n",(0,l.jsx)(r.p,{children:"To insert newlines in a cell and enable word wrap:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new XSSFWorkbook(); // or new HSSFWorkbook();\r\nSheet sheet = wb.createSheet();\r\nRow row = sheet.createRow(2);\r\nCell cell = row.createCell(2);\r\ncell.setCellValue("Use \\n with word wrap on to create a new line");\r\n\r\nCellStyle cs = wb.createCellStyle();\r\ncs.setWrapText(true);\r\ncell.setCellStyle(cs);\r\n\r\nrow.setHeightInPoints((2 * sheet.getDefaultRowHeightInPoints()));\r\nsheet.autoSizeColumn(2);\r\n\r\ntry (OutputStream fileOut = new FileOutputStream("ooxml-newlines.xlsx")) {\r\n    wb.write(fileOut);\r\n}\r\nwb.close();\n'})}),"\n",(0,l.jsx)(r.h3,{id:"12-data-formats",children:"12. Data Formats"}),"\n",(0,l.jsx)(r.h4,{id:"formatting-data",children:"Formatting Data"}),"\n",(0,l.jsx)(r.p,{children:"Apply specific data formats to cells:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new HSSFWorkbook();\r\nSheet sheet = wb.createSheet("format sheet");\r\nDataFormat format = wb.createDataFormat();\r\n\r\nRow row1 = sheet.createRow(0);\r\nCell cell1 = row1.createCell(0);\r\ncell1.setCellValue(11111.25);\r\nCellStyle style1 = wb.createCellStyle();\r\nstyle1.setDataFormat(format.getFormat("0.0"));\r\ncell1.setCellStyle(style1);\r\n\r\nRow row2 = sheet.createRow(1);\r\nCell cell2 = row2.createCell(0);\r\ncell2.setCellValue(11111.25);\r\nCellStyle style2 = wb.createCellStyle();\r\nstyle2.setDataFormat(format.getFormat("#,##0.0000"));\r\ncell2.setCellStyle(style2);\r\n\r\ntry (OutputStream fileOut = new FileOutputStream("workbook.xls")) {\r\n    wb.write(fileOut);\r\n}\r\nwb.close();\n'})}),"\n",(0,l.jsx)(r.h3,{id:"13-fit-sheet-to-one-page",children:"13. Fit Sheet to One Page"}),"\n",(0,l.jsx)(r.h4,{id:"adjusting-sheet-for-printing",children:"Adjusting Sheet for Printing"}),"\n",(0,l.jsx)(r.p,{children:"Fit sheet content to one page:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new HSSFWorkbook();\r\nSheet sheet = wb.createSheet("format sheet");\r\nPrintSetup ps = sheet.getPrintSetup();\r\nsheet.setAutobreaks(true);\r\nps.setFitHeight((short) 1);\r\nps.setFitWidth((short) 1);\r\n\r\n// Create cells and rows for spreadsheet content\r\n\r\ntry (OutputStream fileOut = new FileOutputStream("workbook.xls")) {\r\n    wb.write(fileOut);\r\n}\r\nwb.close();\n'})}),"\n",(0,l.jsx)(r.h3,{id:"14-set-print-area",children:"14. Set Print Area"}),"\n",(0,l.jsx)(r.h4,{id:"defining-print-area",children:"Defining Print Area"}),"\n",(0,l.jsx)(r.p,{children:"Set a specific print area for a sheet:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new HSSFWorkbook();\r\nSheet sheet = wb.createSheet("Sheet1");\r\n\r\n// Option 1: Set print area by cell references\r\nwb.setPrintArea(0, "$A$1:$C$2");\r\n\r\n// Option 2: Set print area by indices\r\nwb.setPrintArea(0, 0, 1, 0, 0);\r\n\r\ntry (OutputStream fileOut = new FileOutputStream("workbook.xls")) {\r\n    wb.write(fileOut);\r\n}\r\nwb.close();\n'})}),"\n",(0,l.jsx)(r.h3,{id:"15-set-page-numbers-on-footer",children:"15. Set Page Numbers on Footer"}),"\n",(0,l.jsx)(r.h4,{id:"adding-page-numbers",children:"Adding Page Numbers"}),"\n",(0,l.jsx)(r.p,{children:"Include page numbers in the footer:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new HSSFWorkbook(); // or new XSSFWorkbook();\r\nSheet sheet = wb.createSheet("format sheet");\r\nFooter footer = sheet.getFooter();\r\nfooter.setRight("Page " + HeaderFooter.page() + " of " + HeaderFooter.numPages());\r\n\r\n// Create cells and rows for spreadsheet content\r\n\r\ntry (OutputStream fileOut = new FileOutputStream("workbook.xls")) {\r\n    wb.write(fileOut);\r\n}\r\nwb.close();\n'})}),"\n",(0,l.jsx)(r.h3,{id:"16-using-the-convenience-functions",children:"16. Using the Convenience Functions"}),"\n",(0,l.jsx)(r.h4,{id:"simplified-styling-and-formatting",children:"Simplified Styling and Formatting"}),"\n",(0,l.jsx)(r.p,{children:"Utilize convenience functions for styling and formatting:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new HSSFWorkbook(); // or new XSSFWorkbook()\r\nSheet sheet1 = wb.createSheet("new sheet");\r\n\r\n// Create a merged region\r\nRow row = sheet1.createRow(1);\r\nCell cell = row.createCell(1);\r\ncell.setCellValue("This is a test of merging");\r\nCellRangeAddress region = CellRangeAddress.valueOf("B2:E5");\r\nsheet1.addMergedRegion(region);\r\n\r\n// Set borders around merged region\r\nRegionUtil.setBorderBottom(BorderStyle.MEDIUM_DASHED, region, sheet1, wb);\r\nRegionUtil.setBorderTop(BorderStyle.MEDIUM_DASHED, region, sheet1, wb);\r\nRegionUtil.setBorderLeft(BorderStyle.MEDIUM_DASHED, region, sheet1, wb);\r\nRegionUtil.setBorderRight(BorderStyle.MEDIUM_DASHED, region, sheet1, wb);\r\nRegionUtil.setBottomBorderColor(IndexedColors.AQUA.getIndex(), region, sheet1, wb);\r\nRegionUtil.setTopBorderColor(IndexedColors.AQUA.getIndex(), region, sheet1, wb);\r\nRegionUtil.setLeftBorderColor(IndexedColors.AQUA.getIndex(), region, sheet1, wb);\r\nRegionUtil.setRightBorderColor(IndexedColors.AQUA.getIndex(), region, sheet1, wb);\r\n\r\n// Set cell alignment and create cell with specific style\r\nCellStyle style = wb.createCellStyle();\r\nstyle.setIndention((short) 4);\r\nCellUtil.createCell(row, 8, "This is the value of the cell", style);\r\n\r\n// Write out the workbook\r\ntry (OutputStream fileOut = new FileOutputStream("workbook.xls")) {\r\n    wb.write(fileOut);\r\n}\r\nwb.close();\n'})}),"\n",(0,l.jsx)(r.h3,{id:"17-shift-rows-up-or-down-on-a-sheet",children:"17. Shift Rows up or down on a Sheet"}),"\n",(0,l.jsx)(r.h4,{id:"adjusting-row-positions",children:"Adjusting Row Positions"}),"\n",(0,l.jsx)(r.p,{children:"Shift rows on a sheet:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new HSSFWorkbook();\r\nSheet sheet = wb.createSheet("row sheet");\r\n\r\n// Shift rows 6 - 10 up by 5 rows\r\nsheet.shiftRows(5, 10, -5);\r\n\r\ntry (OutputStream fileOut = new FileOutputStream("workbook.xls")) {\r\n    wb.write(fileOut);\r\n}\r\nwb.close();\n'})}),"\n",(0,l.jsx)(r.h3,{id:"18-set-a-sheet-as-selected",children:"18. Set a Sheet as Selected"}),"\n",(0,l.jsx)(r.h4,{id:"marking-a-sheet-as-selected",children:"Marking a Sheet as Selected"}),"\n",(0,l.jsx)(r.p,{children:"Set a sheet as selected:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new HSSFWorkbook();\r\nSheet sheet = wb.createSheet("row sheet");\r\nsheet.setSelected(true);\n'})}),"\n",(0,l.jsx)(r.h3,{id:"19-set-the-zoom-magnification",children:"19. Set the Zoom Magnification"}),"\n",(0,l.jsx)(r.h4,{id:"adjusting-sheet-zoom",children:"Adjusting Sheet Zoom"}),"\n",(0,l.jsx)(r.p,{children:"Set the zoom level (e.g., 75%):"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new HSSFWorkbook();\r\nSheet sheet1 = wb.createSheet("new sheet");\r\nsheet1.setZoom(75); // 75 percent magnification\n'})}),"\n",(0,l.jsx)(r.h3,{id:"20-headers-and-footers",children:"20. Headers and Footers"}),"\n",(0,l.jsx)(r.h4,{id:"adding-headers-and-footers",children:"Adding Headers and Footers"}),"\n",(0,l.jsx)(r.p,{children:"Set headers and footers for a sheet:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new HSSFWorkbook();\r\nSheet sheet = wb.createSheet("new sheet");\r\nHeader header = sheet.getHeader();\r\nheader.setCenter("Center Header");\r\nheader.setLeft("Left Header");\r\nheader.setRight("Right Header");\r\n\r\ntry (OutputStream fileOut = new FileOutputStream("workbook.xls")) {\r\n    wb.write(fileOut);\r\n}\r\nwb.close();\n'})}),"\n",(0,l.jsx)(r.h3,{id:"21-outlining",children:"21. Outlining"}),"\n",(0,l.jsx)(r.h4,{id:"grouping-and-outlining",children:"Grouping and Outlining"}),"\n",(0,l.jsx)(r.p,{children:"Group rows and columns to create outlines:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook wb = new HSSFWorkbook();\r\nSheet sheet1 = wb.createSheet("new sheet");\r\n\r\nsheet1.groupRow(5, 14);\r\nsheet1.groupRow(7, 14);\r\nsheet1.groupRow(16, 19);\r\nsheet1.groupColumn(4, 7);\r\nsheet1.groupColumn(9, 12);\r\nsheet1.groupColumn(10, 11);\r\n\r\ntry (OutputStream fileOut = new FileOutputStream("workbook.xls")) {\r\n    wb.write(fileOut);\r\n}\r\nwb.close();\n'})}),"\n",(0,l.jsx)(r.h2,{id:"22-creating-named-range--named-cell",children:"22. Creating Named Range / Named Cell"}),"\n",(0,l.jsxs)(r.p,{children:["Named Range is a way to refer to a group of cells by a name. Named Cell refers to a single cell. You can create and refer to cells in a workbook by their named range. When working with Named Ranges, the classes ",(0,l.jsx)(r.code,{children:"org.apache.poi.ss.util.CellReference"})," and ",(0,l.jsx)(r.code,{children:"org.apache.poi.ss.util.AreaReference"})," are used."]}),"\n",(0,l.jsx)(r.h3,{id:"create-named-range-for-a-single-cell-using-areareference",children:"create named range for a single cell using AreaReference"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'// setup code\r\nString sname = "TestSheet", cname = "TestName", cvalue = "TestVal";\r\nWorkbook wb = new HSSFWorkbook();\r\nSheet sheet = wb.createSheet(sname);\r\nsheet.createRow(0).createCell(0).setCellValue(cvalue);\r\n\r\nName namedCell = wb.createName();\r\nnamedCell.setNameName(cname + "1");\r\nString reference = sname + "!$A$1:$A$1"; // area reference\r\nnamedCell.setRefersToFormula(reference);\n'})}),"\n",(0,l.jsx)(r.h3,{id:"create-named-range-for-a-single-cell-using-cellreference",children:"create named range for a single cell using CellReference"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Name namedCel2 = wb.createName();\r\nnamedCel2.setNameName(cname + "2");\r\nreference = sname + "!$A$1"; // cell reference\r\nnamedCel2.setRefersToFormula(reference);\n'})}),"\n",(0,l.jsx)(r.h3,{id:"create-named-range-for-an-area-using-areareference",children:"create named range for an area using AreaReference"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Name namedCel3 = wb.createName();\r\nnamedCel3.setNameName(cname + "3");\r\nreference = sname + "!$A$1:$C$5"; // area reference\r\nnamedCel3.setRefersToFormula(reference);\n'})}),"\n",(0,l.jsx)(r.h3,{id:"create-named-formula",children:"create named formula"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Name namedCel4 = wb.createName();\r\nnamedCel4.setNameName("my_sum");\r\nnamedCel4.setRefersToFormula("SUM(" + sname + "!$I$2:$I$6)");\n'})}),"\n",(0,l.jsx)(r.h2,{id:"23-reading-from-named-range--named-cell",children:"23. Reading from Named Range / Named Cell"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'// setup code\r\nString cname = "TestName";\r\nWorkbook wb = getMyWorkbook(); // retrieve workbook\r\n\r\nint namedCellIdx = wb.getNameIndex(cellName);\r\nName aNamedCell = wb.getNameAt(namedCellIdx);\r\n\r\nAreaReference aref = new AreaReference(aNamedCell.getRefersToFormula());\r\nCellReference[] crefs = aref.getAllReferencedCells();\r\n\r\nfor (int i=0; i<crefs.length; i++) {\r\n    Sheet s = wb.getSheet(crefs[i].getSheetName());\r\n    Row r = sheet.getRow(crefs[i].getRow());\r\n    Cell c = r.getCell(crefs[i].getCol());\r\n    // extract the cell contents based on cell type etc.\r\n}\n'})}),"\n",(0,l.jsx)(r.h3,{id:"reading-from-non-contiguous-named-ranges",children:"Reading from non-contiguous Named Ranges"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'// Setup code\r\nString cname = "TestName";\r\nWorkbook wb = getMyWorkbook(); // retrieve workbook\r\n\r\nint namedCellIdx = wb.getNameIndex(cellName);\r\nName aNamedCell = wb.getNameAt(namedCellIdx);\r\n\r\nAreaReference[] arefs = AreaReference.generateContiguous(aNamedCell.getRefersToFormula());\r\n\r\nfor (int i=0; i<arefs.length; i++) {\r\n    CellReference[] crefs = arefs[i].getCells();\r\n    for (int j=0; j<crefs.length; j++) {\r\n        Sheet s = wb.getSheet(crefs[j].getSheetName());\r\n        Row r = s.getRow(crefs[j].getRow());\r\n        Cell c = r.getCell(crefs[j].getCol());\r\n        // Do something with this corner cell\r\n    }\r\n}\n'})}),"\n",(0,l.jsxs)(r.p,{children:["When a cell is deleted, Excel does not delete the attached named range. Therefore, the workbook can contain named ranges that point to cells that no longer exist. Check the validity of a reference before constructing ",(0,l.jsx)(r.code,{children:"AreaReference"}),"."]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:"if(name.isDeleted()){\r\n  // named range points to a deleted cell.\r\n} else {\r\n  AreaReference ref = new AreaReference(name.getRefersToFormula());\r\n}\n"})}),"\n",(0,l.jsx)(r.h2,{id:"24-adjust-column-width-to-fit-the-contents",children:"24. Adjust column width to fit the contents"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:"Sheet sheet = workbook.getSheetAt(0);\r\nsheet.autoSizeColumn(0); // adjust width of the first column\r\nsheet.autoSizeColumn(1); // adjust width of the second column\n"})}),"\n",(0,l.jsxs)(r.p,{children:["For ",(0,l.jsx)(r.code,{children:"SXSSFWorkbooks"}),", ensure columns are tracked for auto-sizing prior to flushing rows."]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'SXSSFWorkbook workbook = new SXSSFWorkbook();\r\nSXSSFSheet sheet = workbook.createSheet();\r\nsheet.trackColumnForAutoSizing(0);\r\nsheet.trackColumnForAutoSizing(1);\r\n// create cells\r\nfor (int r=0; r < 10; r++) {\r\n    Row row = sheet.createRow(r);\r\n    for (int c; c < 10; c++) {\r\n        Cell cell = row.createCell(c);\r\n        cell.setCellValue("Cell " + c.getAddress().formatAsString());\r\n    }\r\n}\r\nsheet.autoSizeColumn(0);\r\nsheet.autoSizeColumn(1);\n'})}),"\n",(0,l.jsxs)(r.p,{children:[(0,l.jsx)(r.strong,{children:"Note:"})," ",(0,l.jsx)(r.code,{children:"Sheet#autoSizeColumn()"})," does not evaluate formula cells; their width is based on the cached formula result."]}),"\n",(0,l.jsx)(r.h2,{id:"25-conditional-formatting",children:"25. Conditional Formatting"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook workbook = new HSSFWorkbook(); // or new XSSFWorkbook();\r\nSheet sheet = workbook.createSheet();\r\nSheetConditionalFormatting sheetCF = sheet.getSheetConditionalFormatting();\r\n\r\nConditionalFormattingRule rule1 = sheetCF.createConditionalFormattingRule(ComparisonOperator.EQUAL, "0");\r\nFontFormatting fontFmt = rule1.createFontFormatting();\r\nfontFmt.setFontStyle(true, false);\r\nfontFmt.setFontColorIndex(IndexedColors.DARK_RED.index);\r\nBorderFormatting bordFmt = rule1.createBorderFormatting();\r\nbordFmt.setBorderBottom(BorderStyle.THIN);\r\nbordFmt.setBorderTop(BorderStyle.THICK);\r\nbordFmt.setBorderLeft(BorderStyle.DASHED);\r\nbordFmt.setBorderRight(BorderStyle.DOTTED);\r\nPatternFormatting patternFmt = rule1.createPatternFormatting();\r\npatternFmt.setFillBackgroundColor(IndexedColors.YELLOW.index);\r\n\r\nConditionalFormattingRule rule2 = sheetCF.createConditionalFormattingRule(ComparisonOperator.BETWEEN, "-10", "10");\r\n\r\nConditionalFormattingRule [] cfRules = { rule1, rule2 };\r\nCellRangeAddress[] regions = { CellRangeAddress.valueOf("A3:A5") };\r\nsheetCF.addConditionalFormatting(regions, cfRules);\n'})}),"\n",(0,l.jsx)(r.h2,{id:"26-hiding-and-un-hiding-rows",children:"26. Hiding and Un-Hiding Rows"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:"Workbook workbook = new XSSFWorkbook();  // OR new HSSFWorkbook()\r\nSheet sheet = workbook.createSheet(0);\r\nRow row = workbook.createRow(0);\r\nrow.setZeroHeight();\n"})}),"\n",(0,l.jsx)(r.p,{children:"To unhide previously hidden rows:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:"Workbook workbook = WorkbookFactory.create(new File(.......));\r\nSheet sheet = workbook.getSheetAt(0);\r\nIterator<Row> rowIter = sheet.iterator();\r\n\r\nwhile(rowIter.hasNext()) {\r\n    Row row = rowIter.next();\r\n    if(row.getZeroHeight()) {\r\n        row.setZeroHeight(false);\r\n    }\r\n}\n"})}),"\n",(0,l.jsx)(r.h2,{id:"27setting-cell-properties",children:"27.Setting Cell Properties"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'Workbook workbook = new XSSFWorkbook();  // OR new HSSFWorkbook()\r\nSheet sheet = workbook.createSheet("Sheet1");\r\n\r\nMap<String, Object> properties = new HashMap<String, Object>();\r\n// border around a cell\r\nproperties.put(CellUtil.BORDER_TOP, BorderStyle.MEDIUM);\r\nproperties.put(CellUtil.BORDER_BOTTOM, BorderStyle.MEDIUM);\r\nproperties.put(CellUtil.BORDER_LEFT, BorderStyle.MEDIUM);\r\nproperties.put(CellUtil.BORDER_RIGHT, BorderStyle.MEDIUM);\r\n\r\n// Give it a color (RED)\r\nproperties.put(CellUtil.TOP_BORDER_COLOR, IndexedColors.RED.getIndex());\r\nproperties.put(CellUtil.BOTTOM_BORDER_COLOR, IndexedColors.RED.getIndex());\r\nproperties.put(CellUtil.LEFT_BORDER_COLOR, IndexedColors.RED.getIndex());\r\nproperties.put(CellUtil.RIGHT_BORDER_COLOR, IndexedColors.RED.getIndex());\r\n\r\n// Apply the borders to the cell at B2\r\nRow row = sheet.createRow(1);\r\nCell cell = row.createCell(1);\r\nCellUtil.setCellStyleProperties(cell, properties);\r\n\r\n// Apply the borders to a 3x3 region starting at D4\r\nfor (int ix=3; ix <= 5; ix++) {\r\n  row = sheet.createRow(ix);\r\n  for (int iy = 3; iy <= 5; iy++) {\r\n    cell = row.createCell(iy);\r\n    CellUtil.setCellStyleProperties(cell, properties);\r\n  }\r\n}\n'})}),"\n",(0,l.jsx)(r.h2,{id:"28drawing-borders",children:"28.Drawing Borders"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'PropertyTemplate pt = new PropertyTemplate();\r\n\r\n// #1) these borders will all be medium in default color\r\npt.drawBorders(new CellRangeAddress(1, 3, 1, 3), BorderStyle.MEDIUM, BorderExtent.ALL);\r\n\r\n// #2) these cells will have medium outside borders and thin inside borders\r\npt.drawBorders(new CellRangeAddress(5, 7, 1, 3), BorderStyle.MEDIUM, BorderExtent.OUTSIDE);\r\npt.drawBorders(new CellRangeAddress(5, 7, 1, 3), BorderStyle.THIN, BorderExtent.INSIDE);\r\n\r\n// #3) these cells will all be medium weight with different colors for the\r\n//     outside, inside horizontal, and inside vertical borders. The center\r\n//     cell will have no borders.\r\npt.drawBorders(new CellRangeAddress(9, 11, 1, 3), BorderStyle.MEDIUM, IndexedColors.RED.getIndex(), BorderExtent.OUTSIDE);\r\npt.drawBorders(new CellRangeAddress(9, 11, 1, 3), BorderStyle.MEDIUM, IndexedColors.BLUE.getIndex(), BorderExtent.INSIDE_VERTICAL);\r\npt.drawBorders(new CellRangeAddress(9, 11, 1, 3), BorderStyle.MEDIUM, IndexedColors.GREEN.getIndex(), BorderExtent.INSIDE_HORIZONTAL);\r\npt.drawBorders(new CellRangeAddress(10, 10, 2, 2), BorderStyle.NONE, BorderExtent.ALL);\r\n\r\n// apply borders to sheet\r\nWorkbook wb = new XSSFWorkbook();\r\nSheet sh = wb.createSheet("Sheet1");\r\npt.applyBorders(sh);\n'})}),"\n",(0,l.jsx)(r.h2,{id:"29creating-a-pivot-table",children:"29.Creating a Pivot Table"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'XSSFWorkbook wb = new XSSFWorkbook();\r\nXSS\r\n\r\nFSheet sheet = wb.createSheet();\r\n\r\n// Create some data to build the pivot table on\r\nsetCellData(sheet);\r\n\r\nXSSFPivotTable pivotTable = sheet.createPivotTable(new AreaReference("A1:D4"), new CellReference("H5"));\r\n\r\n// Configure the pivot table\r\n// Use first column as row label\r\npivotTable.addRowLabel(0);\r\n// Sum up the second column\r\npivotTable.addColumnLabel(DataConsolidateFunction.SUM, 1);\r\n// Set the third column as filter\r\npivotTable.addColumnLabel(DataConsolidateFunction.AVERAGE, 2);\r\n// Add filter on fourth column\r\npivotTable.addReportFilter(3);\n'})}),"\n",(0,l.jsx)(r.h2,{id:"29--cells-with-multiple-styles-rich-text-strings",children:"29.  Cells with multiple styles (Rich Text Strings)"}),"\n",(0,l.jsxs)(r.p,{children:["To apply different formatting to different parts of a cell, use ",(0,l.jsx)(r.code,{children:"RichTextString"}),"."]}),"\n",(0,l.jsx)(r.h3,{id:"hssf-example",children:"HSSF Example"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'HSSFCell hssfCell = row.createCell(idx);\r\nHSSFRichTextString richString = new HSSFRichTextString("Hello, World!");\r\nrichString.applyFont(0, 6, font1);\r\nrichString.applyFont(6, 13, font2);\r\nhssfCell.setCellValue(richString);\n'})}),"\n",(0,l.jsx)(r.h3,{id:"xssf-example",children:"XSSF Example"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-java",children:'XSSFCell cell = row.createCell(1);\r\nXSSFRichTextString rt = new XSSFRichTextString("The quick brown fox");\r\nrt.applyFont(0, 10, font1);\r\nrt.applyFont(10, 19, font2);\r\nrt.append(" Jumped over the lazy dog", font3);\r\ncell.setCellValue(rt);\n'})})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>i});var t=n(6540);const l={},o=t.createContext(l);function a(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);