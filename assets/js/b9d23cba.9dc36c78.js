"use strict";(self.webpackChunktkbook=self.webpackChunktkbook||[]).push([[7771],{1295:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>a});var n=s(4848),r=s(8453);const c={},d="Java Modifiers Order",o={id:"Java & Spring/Java Modifiers Order",title:"Java Modifiers Order",description:"In Java, the order of modifiers follows a specific convention that enhances readability and consistency. Modifiers control the visibility, behavior, and other properties of classes, methods, fields, and constructors. Below is the standard order of modifiers in Java declarations:",source:"@site/docs/Java & Spring/Java Modifiers Order.md",sourceDirName:"Java & Spring",slug:"/Java & Spring/Java Modifiers Order",permalink:"/tk_book/docs/Java & Spring/Java Modifiers Order",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HQL or JPQL?",permalink:"/tk_book/docs/Java & Spring/HQL vs JPQL"},next:{title:"JPQL Documentation",permalink:"/tk_book/docs/java/jpql"}},l={},a=[{value:"1. Class Declarations",id:"1-class-declarations",level:2},{value:"Example:",id:"example",level:3},{value:"2. Method Declarations",id:"2-method-declarations",level:2},{value:"Example:",id:"example-1",level:3},{value:"3. Field Declarations",id:"3-field-declarations",level:2},{value:"Example:",id:"example-2",level:3},{value:"4. Constructor Declarations",id:"4-constructor-declarations",level:2},{value:"Example:",id:"example-3",level:3},{value:"Special Notes",id:"special-notes",level:2}];function t(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"java-modifiers-order",children:"Java Modifiers Order"})}),"\n",(0,n.jsx)(i.p,{children:"In Java, the order of modifiers follows a specific convention that enhances readability and consistency. Modifiers control the visibility, behavior, and other properties of classes, methods, fields, and constructors. Below is the standard order of modifiers in Java declarations:"}),"\n",(0,n.jsx)(i.h2,{id:"1-class-declarations",children:"1. Class Declarations"}),"\n",(0,n.jsx)(i.p,{children:"For classes, the typical order of modifiers is:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Access Modifiers"})," (",(0,n.jsx)(i.code,{children:"public"}),", ",(0,n.jsx)(i.code,{children:"protected"}),", ",(0,n.jsx)(i.code,{children:"private"}),")"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Non-Access Modifiers"})," (",(0,n.jsx)(i.code,{children:"abstract"}),", ",(0,n.jsx)(i.code,{children:"final"}),", ",(0,n.jsx)(i.code,{children:"static"}),", ",(0,n.jsx)(i.code,{children:"strictfp"}),")"]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"example",children:"Example:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:"public abstract class MyClass {\n    // class body\n}\n"})}),"\n",(0,n.jsx)(i.h2,{id:"2-method-declarations",children:"2. Method Declarations"}),"\n",(0,n.jsx)(i.p,{children:"For methods, the order of modifiers is:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Access Modifiers"})," (",(0,n.jsx)(i.code,{children:"public"}),", ",(0,n.jsx)(i.code,{children:"protected"}),", ",(0,n.jsx)(i.code,{children:"private"}),")"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Non-Access Modifiers"})," (",(0,n.jsx)(i.code,{children:"abstract"}),", ",(0,n.jsx)(i.code,{children:"static"}),", ",(0,n.jsx)(i.code,{children:"final"}),", ",(0,n.jsx)(i.code,{children:"synchronized"}),", ",(0,n.jsx)(i.code,{children:"native"}),", ",(0,n.jsx)(i.code,{children:"strictfp"}),")"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Return Type"})," (",(0,n.jsx)(i.code,{children:"void"}),", ",(0,n.jsx)(i.code,{children:"int"}),", ",(0,n.jsx)(i.code,{children:"String"}),", etc.)"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Method Name"})," and ",(0,n.jsx)(i.strong,{children:"Parameters"})]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"example-1",children:"Example:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:"protected abstract String buildDetailPlan(Conteneur conteneur);\n"})}),"\n",(0,n.jsx)(i.h2,{id:"3-field-declarations",children:"3. Field Declarations"}),"\n",(0,n.jsx)(i.p,{children:"For fields (variables) in a class, the order is:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Access Modifiers"})," (",(0,n.jsx)(i.code,{children:"public"}),", ",(0,n.jsx)(i.code,{children:"protected"}),", ",(0,n.jsx)(i.code,{children:"private"}),")"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Non-Access Modifiers"})," (",(0,n.jsx)(i.code,{children:"static"}),", ",(0,n.jsx)(i.code,{children:"final"}),", ",(0,n.jsx)(i.code,{children:"transient"}),", ",(0,n.jsx)(i.code,{children:"volatile"}),")"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Data Type"})," (",(0,n.jsx)(i.code,{children:"int"}),", ",(0,n.jsx)(i.code,{children:"String"}),", etc.)"]}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.strong,{children:"Field Name"})}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"example-2",children:"Example:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:"private static final int MAX_VALUE = 100;\n"})}),"\n",(0,n.jsx)(i.h2,{id:"4-constructor-declarations",children:"4. Constructor Declarations"}),"\n",(0,n.jsx)(i.p,{children:"For constructors, the order is simpler:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Access Modifiers"})," (",(0,n.jsx)(i.code,{children:"public"}),", ",(0,n.jsx)(i.code,{children:"protected"}),", ",(0,n.jsx)(i.code,{children:"private"}),")"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Constructor Name"})," and ",(0,n.jsx)(i.strong,{children:"Parameters"})]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"example-3",children:"Example:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:"public MyClass(int parameter) {\n    // constructor body\n}\n"})}),"\n",(0,n.jsx)(i.h2,{id:"special-notes",children:"Special Notes"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Order Consistency"}),": Maintaining this order helps improve code readability and ensures consistency across Java codebases."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Optional Modifiers"}),": Not all modifiers are required. The specific combination depends on the desired behavior and visibility of the class, method, or field."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Modifiers Context"}),": Certain modifiers are context-specific; for example, ",(0,n.jsx)(i.code,{children:"abstract"})," cannot be used with ",(0,n.jsx)(i.code,{children:"private"}),", and ",(0,n.jsx)(i.code,{children:"final"})," cannot be used with ",(0,n.jsx)(i.code,{children:"abstract"}),"."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.p,{children:"This guide helps standardize how modifiers are used and ordered in Java, aligning with common practices and official Java conventions."})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(t,{...e})}):t(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>d,x:()=>o});var n=s(6540);const r={},c=n.createContext(r);function d(e){const i=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(c.Provider,{value:i},e.children)}}}]);